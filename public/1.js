webpackJsonp([1],{

/***/ 253:
/***/ (function(module, exports, __webpack_require__) {

eval("var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  __webpack_require__(362)\n}\nvar normalizeComponent = __webpack_require__(13)\n/* script */\nvar __vue_script__ = __webpack_require__(364)\n/* template */\nvar __vue_template__ = __webpack_require__(368)\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"resources/js/views/Overview.vue\"\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-1d78e5d0\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-1d78e5d0\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvdmlld3MvT3ZlcnZpZXcudnVlP2I2MmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsRUFBRSxtQkFBTyxDQUFDLEdBQXdRO0FBQ2xSO0FBQ0EseUJBQXlCLG1CQUFPLENBQUMsRUFBNEQ7QUFDN0Y7QUFDQSxxQkFBcUIsbUJBQU8sQ0FBQyxHQUF1WTtBQUNwYTtBQUNBLHVCQUF1QixtQkFBTyxDQUFDLEdBQWtPO0FBQ2pRO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxJQUFJLEtBQVUsR0FBRztBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQzs7QUFFRCIsImZpbGUiOiIyNTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZGlzcG9zZWQgPSBmYWxzZVxuZnVuY3Rpb24gaW5qZWN0U3R5bGUgKHNzckNvbnRleHQpIHtcbiAgaWYgKGRpc3Bvc2VkKSByZXR1cm5cbiAgcmVxdWlyZShcIiEhdnVlLXN0eWxlLWxvYWRlciFjc3MtbG9hZGVyP3NvdXJjZU1hcCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXg/e1xcXCJ2dWVcXFwiOnRydWUsXFxcImlkXFxcIjpcXFwiZGF0YS12LTFkNzhlNWQwXFxcIixcXFwic2NvcGVkXFxcIjpmYWxzZSxcXFwiaGFzSW5saW5lQ29uZmlnXFxcIjp0cnVlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL092ZXJ2aWV3LnZ1ZVwiKVxufVxudmFyIG5vcm1hbGl6ZUNvbXBvbmVudCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2NvbXBvbmVudC1ub3JtYWxpemVyXCIpXG4vKiBzY3JpcHQgKi9cbnZhciBfX3Z1ZV9zY3JpcHRfXyA9IHJlcXVpcmUoXCIhIWJhYmVsLWxvYWRlcj97XFxcImNhY2hlRGlyZWN0b3J5XFxcIjp0cnVlLFxcXCJwcmVzZXRzXFxcIjpbW1xcXCJAYmFiZWwvcHJlc2V0LWVudlxcXCIse1xcXCJtb2R1bGVzXFxcIjpmYWxzZSxcXFwidGFyZ2V0c1xcXCI6e1xcXCJicm93c2Vyc1xcXCI6W1xcXCI+IDIlXFxcIl19LFxcXCJmb3JjZUFsbFRyYW5zZm9ybXNcXFwiOnRydWV9XV0sXFxcInBsdWdpbnNcXFwiOltcXFwiQGJhYmVsL3BsdWdpbi1wcm9wb3NhbC1vYmplY3QtcmVzdC1zcHJlYWRcXFwiLFtcXFwiQGJhYmVsL3BsdWdpbi10cmFuc2Zvcm0tcnVudGltZVxcXCIse1xcXCJoZWxwZXJzXFxcIjpmYWxzZX1dLFxcXCJzeW50YXgtZHluYW1pYy1pbXBvcnRcXFwiXX0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9PdmVydmlldy52dWVcIilcbi8qIHRlbXBsYXRlICovXG52YXIgX192dWVfdGVtcGxhdGVfXyA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleD97XFxcImlkXFxcIjpcXFwiZGF0YS12LTFkNzhlNWQwXFxcIixcXFwiaGFzU2NvcGVkXFxcIjpmYWxzZSxcXFwiYnVibGVcXFwiOntcXFwidHJhbnNmb3Jtc1xcXCI6e319fSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vT3ZlcnZpZXcudnVlXCIpXG4vKiB0ZW1wbGF0ZSBmdW5jdGlvbmFsICovXG52YXIgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fID0gZmFsc2Vcbi8qIHN0eWxlcyAqL1xudmFyIF9fdnVlX3N0eWxlc19fID0gaW5qZWN0U3R5bGVcbi8qIHNjb3BlSWQgKi9cbnZhciBfX3Z1ZV9zY29wZUlkX18gPSBudWxsXG4vKiBtb2R1bGVJZGVudGlmaWVyIChzZXJ2ZXIgb25seSkgKi9cbnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fID0gbnVsbFxudmFyIENvbXBvbmVudCA9IG5vcm1hbGl6ZUNvbXBvbmVudChcbiAgX192dWVfc2NyaXB0X18sXG4gIF9fdnVlX3RlbXBsYXRlX18sXG4gIF9fdnVlX3RlbXBsYXRlX2Z1bmN0aW9uYWxfXyxcbiAgX192dWVfc3R5bGVzX18sXG4gIF9fdnVlX3Njb3BlSWRfXyxcbiAgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfX1xuKVxuQ29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJyZXNvdXJjZXMvanMvdmlld3MvT3ZlcnZpZXcudnVlXCJcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkge1xuICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCBmYWxzZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTFkNzhlNWQwXCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtMWQ3OGU1ZDBcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH1cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgZGlzcG9zZWQgPSB0cnVlXG4gIH0pXG59KSgpfVxuXG5tb2R1bGUuZXhwb3J0cyA9IENvbXBvbmVudC5leHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3Jlc291cmNlcy9qcy92aWV3cy9PdmVydmlldy52dWVcbi8vIG1vZHVsZSBpZCA9IDI1M1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///253\n");

/***/ }),

/***/ 362:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(363);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(15)(\"bbb7660a\", content, false, {});\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1d78e5d0\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Overview.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1d78e5d0\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Overview.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvdmlld3MvT3ZlcnZpZXcudnVlPzg3Y2MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQSxjQUFjLG1CQUFPLENBQUMsR0FBNFI7QUFDbFQsNENBQTRDLFFBQVM7QUFDckQ7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxFQUFnRSxnQ0FBZ0M7QUFDckg7QUFDQSxHQUFHLEtBQVU7QUFDYjtBQUNBO0FBQ0EsMElBQTBJLGtGQUFrRjtBQUM1TixtSkFBbUosa0ZBQWtGO0FBQ3JPO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJmaWxlIjoiMzYyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXguanM/e1xcXCJ2dWVcXFwiOnRydWUsXFxcImlkXFxcIjpcXFwiZGF0YS12LTFkNzhlNWQwXFxcIixcXFwic2NvcGVkXFxcIjpmYWxzZSxcXFwiaGFzSW5saW5lQ29uZmlnXFxcIjp0cnVlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL092ZXJ2aWV3LnZ1ZVwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpKFwiYmJiNzY2MGFcIiwgY29udGVudCwgZmFsc2UsIHt9KTtcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcbiAvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuIGlmKCFjb250ZW50LmxvY2Fscykge1xuICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXguanM/e1xcXCJ2dWVcXFwiOnRydWUsXFxcImlkXFxcIjpcXFwiZGF0YS12LTFkNzhlNWQwXFxcIixcXFwic2NvcGVkXFxcIjpmYWxzZSxcXFwiaGFzSW5saW5lQ29uZmlnXFxcIjp0cnVlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL092ZXJ2aWV3LnZ1ZVwiLCBmdW5jdGlvbigpIHtcbiAgICAgdmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi0xZDc4ZTVkMFxcXCIsXFxcInNjb3BlZFxcXCI6ZmFsc2UsXFxcImhhc0lubGluZUNvbmZpZ1xcXCI6dHJ1ZX0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9PdmVydmlldy52dWVcIik7XG4gICAgIGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuICAgICB1cGRhdGUobmV3Q29udGVudCk7XG4gICB9KTtcbiB9XG4gLy8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIhLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj9zb3VyY2VNYXAhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXI/e1widnVlXCI6dHJ1ZSxcImlkXCI6XCJkYXRhLXYtMWQ3OGU1ZDBcIixcInNjb3BlZFwiOmZhbHNlLFwiaGFzSW5saW5lQ29uZmlnXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL3Jlc291cmNlcy9qcy92aWV3cy9PdmVydmlldy52dWVcbi8vIG1vZHVsZSBpZCA9IDM2MlxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///362\n");

/***/ }),

/***/ 363:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(14)(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.center {\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  -webkit-box-pack: center;\\r\\n      -ms-flex-pack: center;\\r\\n          justify-content: center;\\r\\n  -webkit-box-align: center;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center;\\n}\\n.card-min {\\r\\n  min-height: 200px;\\n}\\n.card-mod {\\r\\n  padding-top: 10px;\\n}\\r\\n\", \"\", {\"version\":3,\"sources\":[\"C:/Users/gethe/code/inventory/resources/js/views/resources/js/views/Overview.vue\"],\"names\":[],\"mappings\":\";AA6tBA;EACA,qBAAA;EAAA,qBAAA;EAAA,cAAA;EACA,yBAAA;MAAA,sBAAA;UAAA,wBAAA;EACA,0BAAA;MAAA,uBAAA;UAAA,oBAAA;CACA;AACA;EACA,kBAAA;CACA;AACA;EACA,kBAAA;CACA\",\"file\":\"Overview.vue\",\"sourcesContent\":[\"<template>\\r\\n  <div>\\r\\n    <div v-bind:class=\\\"this.$store.state.showSidebar? 'content-title':'spacer content-title' \\\">\\r\\n      <h4 class=\\\"module-title\\\" >DASHBOARD</h4>\\r\\n    </div>\\r\\n    <div class=\\\"mx-md-4 px-0\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-8 col-sm-6 pr-0\\\">\\r\\n          <!-- Main Content Grid -->\\r\\n          <div class=\\\"grid\\\">\\r\\n            <div class=\\\"row mt-3\\\">\\r\\n              <!-- Quotations for Approval -->\\r\\n              <div class=\\\"col-6 pr-0\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-header\\\">\\r\\n                    <span class=\\\"subcontent-header\\\">\\r\\n                      <strong>Quotations for Approval</strong>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  <span v-if=\\\"this.quotationsForApproval && this.quotationsForApproval.length > 0\\\">\\r\\n                    <ul\\r\\n                      class=\\\"list-group list-group-flush\\\"\\r\\n                      :key=\\\"quote.id\\\"\\r\\n                      v-for=\\\"quote in this.quotationsForApproval\\\"\\r\\n                    >\\r\\n                      <li class=\\\"list-group-item\\\">\\r\\n                        {{quote.number}}\\r\\n                        <router-link\\r\\n                          tag=\\\"button\\\"\\r\\n                          :to=\\\"{ name: 'quotations.view', params: { id: quote.id } }\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          class=\\\"btn float-right btn-sm btn-secondary\\\"\\r\\n                        >View</router-link>\\r\\n                      </li>\\r\\n                    </ul>\\r\\n                  </span>\\r\\n                  <span v-else>\\r\\n                    <ul class=\\\"list-group list-group-flush\\\">\\r\\n                      <li class=\\\"list-group-item\\\">No Pending Quotation</li>\\r\\n                    </ul>\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <!-- Stock Request for Approval -->\\r\\n              <div class=\\\"col-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-header\\\">\\r\\n                    <span class=\\\"subcontent-header\\\">\\r\\n                      <strong>Stock Requests for Approval</strong>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  <span v-if=\\\"this.stockRequests && this.stockRequests.length > 0\\\">\\r\\n                    <ul\\r\\n                      class=\\\"list-group list-group-flush\\\"\\r\\n                      :key=\\\"stock.id\\\"\\r\\n                      v-for=\\\"stock in this.stockRequests\\\"\\r\\n                    >\\r\\n                      <li class=\\\"list-group-item\\\">\\r\\n                        {{stock.number}}\\r\\n                        <router-link\\r\\n                          :to=\\\"{ name: 'stock-requests.view', params: { id: stock.id } }\\\"\\r\\n                          tag=\\\"button\\\"\\r\\n                          class=\\\"btn float-right btn-sm btn-secondary\\\"\\r\\n                        >View</router-link>\\r\\n                      </li>\\r\\n                    </ul>\\r\\n                  </span>\\r\\n                  <span v-else>\\r\\n                    <ul class=\\\"list-group list-group-flush\\\">\\r\\n                      <li class=\\\"list-group-item\\\">No Pending Stock Request</li>\\r\\n                    </ul>\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <!-- Sales Report -->\\r\\n              <div class=\\\"col-6 mt-2 pr-0\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-header\\\">\\r\\n                    <span class=\\\"subcontent-header\\\">\\r\\n                      <strong>Stock Transfers for Approval</strong>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  <span v-if=\\\"this.stockTransfers && this.stockTransfers.length > 0\\\">\\r\\n                    <ul\\r\\n                      class=\\\"list-group list-group-flush\\\"\\r\\n                      :key=\\\"stock.id\\\"\\r\\n                      v-for=\\\"stock in this.stockTransfers\\\"\\r\\n                    >\\r\\n                      <li class=\\\"list-group-item\\\">\\r\\n                        {{stock.number}}\\r\\n                        <router-link\\r\\n                          tag=\\\"button\\\"\\r\\n                          class=\\\"btn float-right btn-secondary btn-sm\\\"\\r\\n                          :to=\\\"{ name: 'stock-transfers.view', params: { id: stock.id } }\\\"\\r\\n                        >View</router-link>\\r\\n                      </li>\\r\\n                    </ul>\\r\\n                  </span>\\r\\n                  <span v-else>\\r\\n                    <ul class=\\\"list-group list-group-flush\\\">\\r\\n                      <li class=\\\"list-group-item\\\">No Pendting Stock Transfer</li>\\r\\n                    </ul>\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <!-- Purchase Orders -->\\r\\n              <div class=\\\"col-6 mt-2\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-header\\\">\\r\\n                    <span class=\\\"subcontent-header\\\">\\r\\n                      <strong>Purchase Orders for Approval</strong>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  <span v-if=\\\"this.purchaseOrders && this.purchaseOrders.length > 0\\\">\\r\\n                    <ul\\r\\n                      class=\\\"list-group list-group-flush\\\"\\r\\n                      :key=\\\"po.id\\\"\\r\\n                      v-for=\\\"po in this.purchaseOrders\\\"\\r\\n                    >\\r\\n                      <li class=\\\"list-group-item\\\">\\r\\n                        {{po.reference_number}}\\r\\n                        <router-link\\r\\n                          tag=\\\"button\\\"\\r\\n                          class=\\\"btn float-right btn-secondary btn-sm\\\"\\r\\n                          :to=\\\"{ name: 'purchase-orders.view', params: { id: po.id } }\\\"\\r\\n                        >View</router-link>\\r\\n                      </li>\\r\\n                    </ul>\\r\\n                  </span>\\r\\n                  <span v-else>\\r\\n                    <ul class=\\\"list-group list-group-flush\\\">\\r\\n                      <li class=\\\"list-group-item\\\">No Pending Order</li>\\r\\n                    </ul>\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- PO, RO, Profit -->\\r\\n            <div class=\\\"row mt-3\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <!-- Daily PO -->\\r\\n                  <div class=\\\"col-md-4 col-sm-12\\\">\\r\\n                    <div class=\\\"card card-min\\\">\\r\\n                      <div class=\\\"card-body row\\\">\\r\\n                        <div class=\\\"col-md-12 col-sm-12 text-center center\\\">\\r\\n                          <span class=\\\"display-4\\\">{{todaysPurchaseOrders.length}}</span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"card-footer text-center\\\">\\r\\n                        <strong>Today's Issued Purchase Order</strong>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <!-- Daily RO -->\\r\\n                  <div class=\\\"col-md-4 col-sm-12\\\">\\r\\n                    <div class=\\\"card card-min\\\">\\r\\n                      <div class=\\\"card-body row\\\">\\r\\n                        <div class=\\\"col-md-12 col-sm-12 text-center center\\\">\\r\\n                          <span class=\\\"display-4\\\">{{todaysReceiveOrders.length}}</span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"card-footer text-center\\\">\\r\\n                        <strong>Today's Issued Received Order</strong>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <!-- Daily Income -->\\r\\n                  <div class=\\\"col-md-4 col-sm-12\\\">\\r\\n                    <div class=\\\"card card-min\\\">\\r\\n                      <div class=\\\"card-body row\\\">\\r\\n                        <div class=\\\"col-md-12 col-sm-12 text-center center\\\">\\r\\n                          <span class=\\\"display-4\\\">{{this.kFormatter(totalProfit)}}</span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"card-footer text-center\\\">\\r\\n                        <strong>Today's Profit</strong>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Sales Chart, Purchase Order Comparison  -->\\r\\n            <div class=\\\"row mt-3\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- SubContent -->\\r\\n        <div class=\\\"col-md-4 col-sm-6\\\">\\r\\n          <div class=\\\"row mt-3\\\">\\r\\n            <!-- Display Top 5 Latest P.O -->\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  <span class=\\\"subcontent-header\\\">\\r\\n                    <strong>Latest Purchase Orders</strong>\\r\\n                  </span>\\r\\n                </div>\\r\\n                <span v-if=\\\"this.todaysPurchaseOrders && this.todaysPurchaseOrders.length > 0\\\">\\r\\n                  <ul\\r\\n                    class=\\\"list-group list-group-flush\\\"\\r\\n                    :key=\\\"po.id\\\"\\r\\n                    v-for=\\\"po in this.todaysPurchaseOrders\\\"\\r\\n                  >\\r\\n                    <li class=\\\"list-group-item\\\">\\r\\n                      {{po.reference_number}}\\r\\n                      <router-link\\r\\n                        tag=\\\"button\\\"\\r\\n                        :to=\\\"{ name: 'purchase-orders.view', params: { id: po.id } }\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn float-right btn-sm btn-secondary\\\"\\r\\n                      >View</router-link>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </span>\\r\\n                <span v-else>\\r\\n                  <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li class=\\\"list-group-item\\\">No Purchase Order Available</li>\\r\\n                  </ul>\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row mt-2\\\">\\r\\n            <!-- Display Top 5 Latest P.O -->\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  <span class=\\\"subcontent-header\\\">\\r\\n                    <strong>Latest Quotations</strong>\\r\\n                  </span>\\r\\n                </div>\\r\\n                <span v-if=\\\"this.quotations && this.quotations.length > 0\\\">\\r\\n                  <ul\\r\\n                    class=\\\"list-group list-group-flush\\\"\\r\\n                    :key=\\\"quote.id\\\"\\r\\n                    v-for=\\\"quote in this.quotations\\\"\\r\\n                  >\\r\\n                    <li class=\\\"list-group-item\\\">\\r\\n                      {{quote.number}}\\r\\n                      <router-link\\r\\n                        tag=\\\"button\\\"\\r\\n                        :to=\\\"{ name: 'quotations.view', params: { id: quote.id } }\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn float-right btn-sm btn-secondary\\\"\\r\\n                      >View</router-link>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </span>\\r\\n                <span v-else>\\r\\n                  <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li class=\\\"list-group-item\\\">No Quotations Available</li>\\r\\n                  </ul>\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row mt-2\\\">\\r\\n            <!-- Display Top 5 Latest Stocks -->\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  <span class=\\\"subcontent-header\\\">\\r\\n                    <strong>Shelf Days Per Item</strong>\\r\\n                  </span>\\r\\n                </div>\\r\\n                <span v-if=\\\"this.stocks && this.stocks.length > 0\\\">\\r\\n                  <ul\\r\\n                    class=\\\"list-group list-group-flush\\\"\\r\\n                    :key=\\\"stock.id\\\"\\r\\n                    v-for=\\\"stock in this.stocks\\\"\\r\\n                  >\\r\\n                    <li class=\\\"list-group-item\\\">\\r\\n                      {{stock.item.name}}\\r\\n                      <router-link\\r\\n                        tag=\\\"button\\\"\\r\\n                        :to=\\\"{ name: 'items.view', params: { id: stock.id } }\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn float-right btn-sm btn-secondary\\\"\\r\\n                      >View</router-link>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </span>\\r\\n                <span v-else>\\r\\n                  <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li class=\\\"list-group-item\\\">No Stock Available</li>\\r\\n                  </ul>\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\nconst createBasicConfig = (type, labels, datasets, options) => {\\r\\n  return {\\r\\n    type: type,\\r\\n    data: {\\r\\n      labels: labels,\\r\\n      datasets: datasets\\r\\n    },\\r\\n    options: options\\r\\n  };\\r\\n};\\r\\n\\r\\nconst generateChart = (chartElement, chartOptions) =>\\r\\n  chartElement && chartOptions\\r\\n    ? new Chart(chartElement, chartOptions)\\r\\n    : new Chart();\\r\\nconst convertToDate = strDate => new Date(strDate).toDateString();\\r\\n\\r\\nexport default {\\r\\n  data() {\\r\\n    return {\\r\\n      selectedBranchWeek: \\\"\\\",\\r\\n      selectedTypeWeek: \\\"\\\",\\r\\n      ifReady: false,\\r\\n      chart: \\\"\\\",\\r\\n      salesReportChart: \\\"\\\",\\r\\n      todaysPurchaseOrderChart: \\\"\\\",\\r\\n      todaysReceivedOrderChart: \\\"\\\",\\r\\n      todaysProfitChart: \\\"\\\",\\r\\n      salesComparisonChart: \\\"\\\",\\r\\n      purchaseComparisonChart: \\\"\\\",\\r\\n      dateToday: new Date(),\\r\\n      stocks: [],\\r\\n      quotations: [],\\r\\n      quotationsForApproval: [],\\r\\n      todaysQuotations: [],\\r\\n      invoices: [],\\r\\n      purchaseOrders: [],\\r\\n      todaysPurchaseOrders: [],\\r\\n      bills: [],\\r\\n      todaysReceiveOrders: [],\\r\\n      receiveOrder: [],\\r\\n      todaysStockRequests: [],\\r\\n      stockRequests: [],\\r\\n      invoicePayment: \\\"\\\",\\r\\n      stockRequest: [],\\r\\n      stockTransfers: [],\\r\\n      options: [],\\r\\n      totalProfit: 0,\\r\\n      chartLabels: [\\\"Week 1\\\", \\\"Week 2\\\", \\\"Week 3\\\", \\\"Week 4\\\"],\\r\\n      salesTypeTableData: [],\\r\\n      salesTypeChartData: [\\r\\n        {\\r\\n          label: \\\"Foods\\\",\\r\\n          data: [\\r\\n            {\\r\\n              val: 1\\r\\n            },\\r\\n            {\\r\\n              val: 2\\r\\n            },\\r\\n            {\\r\\n              val: 3\\r\\n            },\\r\\n            {\\r\\n              val: 4\\r\\n            }\\r\\n          ]\\r\\n        },\\r\\n        {\\r\\n          label: \\\"Oats\\\",\\r\\n          data: [\\r\\n            {\\r\\n              val: 5\\r\\n            },\\r\\n            {\\r\\n              val: 10\\r\\n            },\\r\\n            {\\r\\n              val: 30\\r\\n            },\\r\\n            {\\r\\n              val: 40\\r\\n            }\\r\\n          ]\\r\\n        }\\r\\n      ]\\r\\n    };\\r\\n  },\\r\\n\\r\\n  methods: {\\r\\n    changeBranchWeek() {\\r\\n      //console.log(this.selectedBranchWeek)\\r\\n    },\\r\\n    changeTypeWeek() {\\r\\n      //   console.log(this.selectedTypeWeek);\\r\\n      this.salesTypeChartData.map((data, i) => {\\r\\n        if (data.label === this.selectedTypeWeek) {\\r\\n          this.salesTypeTableData = this.salesTypeChartData[i].data;\\r\\n        }\\r\\n      });\\r\\n    },\\r\\n    kFormatter(num) {\\r\\n      return num > 999 ? (num / 1000).toFixed(1) + \\\"K\\\" : num;\\r\\n    }\\r\\n  },\\r\\n  mounted() {\\r\\n    const weeks = [\\r\\n      {\\r\\n        label: \\\"Drinks\\\",\\r\\n        data: [\\r\\n          {\\r\\n            val: 1\\r\\n          },\\r\\n          {\\r\\n            val: 2\\r\\n          },\\r\\n          {\\r\\n            val: 3\\r\\n          },\\r\\n          {\\r\\n            val: 4\\r\\n          }\\r\\n        ]\\r\\n      }\\r\\n    ];\\r\\n    const createWeekData = weekArray => {\\r\\n      return weekArray.map((week, i) => {\\r\\n        return {\\r\\n          label: week.label,\\r\\n          data: week.data.map(data => data.val),\\r\\n          backgroundColor: `rgba(54, 162, 235, ${week.shade})`,\\r\\n          borderColor: \\\"rgba(54, 162, 235, 1)\\\"\\r\\n        };\\r\\n      });\\r\\n    };\\r\\n\\r\\n    const createTypeChartData = weekdata => {\\r\\n      return weekdata.map(arr => {\\r\\n        return {\\r\\n          label: arr.label,\\r\\n          data: arr.data,\\r\\n          backgroundColor: `rgba(54, 162, 235, ${arr.percent})`,\\r\\n          borderColor: \\\"rgba(54, 162, 235, 1)\\\"\\r\\n        };\\r\\n      });\\r\\n    };\\r\\n\\r\\n    const createOptions = weekArray => {\\r\\n      return weekArray.map(data => data.label);\\r\\n    };\\r\\n\\r\\n    this.salesTypeTableData = this.salesTypeChartData[0].data;\\r\\n    // console.log(this.salesTypeTableData);\\r\\n    this.options = createOptions(this.salesTypeChartData);\\r\\n\\r\\n    //console.clear();\\r\\n    const getAllQuotations = () => {\\r\\n      axios\\r\\n        .get(\\\"/api/quotations/get-all-quotations\\\")\\r\\n        .then(res => {\\r\\n          const allQuotations = res.data.quotations;\\r\\n          //   // console.groupCollapsed(\\\"Quotation Request\\\");\\r\\n\\r\\n          const log = JSON.stringify(allQuotations);\\r\\n          //console.log('All Quotation', JSON.parse(log));\\r\\n\\r\\n          this.quotations = allQuotations\\r\\n            ? allQuotations.sort(\\r\\n                (a, b) => new Date(a.created_at) - new Date(b.created_at)\\r\\n              )\\r\\n            : [];\\r\\n\\r\\n          const issuedQuotations = (this.quotationsForApproval = allQuotations.filter(\\r\\n            quo => quo.status === 0\\r\\n          ));\\r\\n\\r\\n          this.todaysQuotations = allQuotations.filter(\\r\\n            quo =>\\r\\n              quo.status === 0 &&\\r\\n              new Date(quo.created_at).getDate() === this.dateToday.getDate()\\r\\n          );\\r\\n\\r\\n          //console.log('Issued Quotations',issuedQuotations)\\r\\n          //   // console.groupEnd();\\r\\n        })\\r\\n        .catch(error => console.error(error));\\r\\n    };\\r\\n\\r\\n    const getAllInvoices = () => {\\r\\n      axios\\r\\n        .get(\\\"/api/invoices/get-all-invoices\\\")\\r\\n        .then(res => {\\r\\n          //   // console.groupCollapsed(\\\"Invoice Request\\\");\\r\\n          const allInvoices = res.data.invoices.sort(\\r\\n            (a, b) => new Date(a.created_at) - new Date(b.created_at)\\r\\n          );\\r\\n          //console.log('All Invoices ->',allInvoices)\\r\\n          //   // console.groupEnd();\\r\\n        })\\r\\n        .catch(error => console.error(error));\\r\\n    };\\r\\n\\r\\n    const getTotalProfit = array => {\\r\\n      let tempAmount = 0;\\r\\n      const finalAmount = 0;\\r\\n      if (typeof array === \\\"array\\\") {\\r\\n        if (array.reduce) {\\r\\n          finalAmount = array.reduce((prev, curr) => {\\r\\n            let prevAmount = prev.amount ? prev.amount : 0;\\r\\n            let currAmount = curr.amount ? curr.amount : 0;\\r\\n            return parseInt(prevAmount) + parseInt(currAmount);\\r\\n          });\\r\\n        }\\r\\n      }\\r\\n      return finalAmount ? finalAmount : 0;\\r\\n    };\\r\\n\\r\\n    const getAllInvoicePayments = () => {\\r\\n      axios\\r\\n        .get(\\\"/api/invoice-payments/get-all-invoice-payments\\\")\\r\\n        .then(res => {\\r\\n          //   // console.groupCollapsed(\\\"Invoice Payments\\\");\\r\\n          const allInvoices = res.data.invoice_payments;\\r\\n          this.invoices = allInvoices\\r\\n            ? allInvoices.sort(\\r\\n                (a, b) => new Date(a.created_at) - new Date(b.created_at)\\r\\n              )\\r\\n            : [];\\r\\n          //console.log('All Invoices ->',JSON.parse(JSON.stringify({res:allInvoices})))\\r\\n\\r\\n          const testData = JSON.parse(JSON.stringify({ res: allInvoices }));\\r\\n\\r\\n          this.totalProfit = getTotalProfit(this.invoices);\\r\\n          //console.log('Total Profit ->', this.totalProfit)\\r\\n          this.total;\\r\\n\\r\\n          // Separate by Month\\r\\n          const monthData = testData.res.filter(\\r\\n            data =>\\r\\n              new Date(data.created_at).getMonth() === new Date().getMonth()\\r\\n          );\\r\\n          //console.log('Month Data ->', monthData)\\r\\n\\r\\n          //Sort Month by first to last\\r\\n          const sortedMonthData = monthData.sort(\\r\\n            (a, b) => new Date(a.created_at) - new Date(b.created_at)\\r\\n          );\\r\\n\\r\\n          Date.prototype.getWeekNumber = function() {\\r\\n            var d = new Date(\\r\\n              Date.UTC(this.getFullYear(), this.getMonth(), this.getDate())\\r\\n            );\\r\\n            var dayNum = d.getUTCDay() || 7;\\r\\n            d.setUTCDate(d.getUTCDate() + 4 - dayNum);\\r\\n            var yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\\r\\n            return Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\\r\\n          };\\r\\n\\r\\n          // Separate Month Data to Week Data\\r\\n          let weekData = [[], [], [], []];\\r\\n          let tempData = [];\\r\\n\\r\\n          function weekOfMonth(m) {\\r\\n            return (\\r\\n              m.week() -\\r\\n              moment(m)\\r\\n                .startOf(\\\"month\\\")\\r\\n                .week() +\\r\\n              1\\r\\n            );\\r\\n          }\\r\\n\\r\\n          sortedMonthData.map(data => {\\r\\n            const weeknumber = weekOfMonth(moment(data.created_at));\\r\\n            weekData[weeknumber - 1].push(data);\\r\\n          });\\r\\n\\r\\n          //console.log('Week Data ->', weekData)\\r\\n\\r\\n          //   // console.groupEnd();\\r\\n        })\\r\\n        .catch(error => console.error(error));\\r\\n    };\\r\\n\\r\\n    const getAllPurchaseOrders = () => {\\r\\n      axios\\r\\n        .get(\\\"/api/purchase-orders/get-all-purchase-orders\\\")\\r\\n        .then(res => {\\r\\n          //   // console.groupCollapsed(\\\"Purchase Orders\\\");\\r\\n          const allPurchaseOrders = res.data.purchase_orders;\\r\\n          //console.log('All Purchase Orders ->',JSON.parse(JSON.stringify({res:res.data.purchase_orders})))\\r\\n          const issuedReceiveOrders = allPurchaseOrders.filter(\\r\\n            data => data.status === 0\\r\\n          );\\r\\n          //console.log('Issued Purchase Orders ->', allPurchaseOrders)\\r\\n          this.todaysPurchaseOrders = allPurchaseOrders.sort(\\r\\n            (a, b) => new Date(a.created_at) - new Date(b.created_at)\\r\\n          );\\r\\n          this.purchaseOrders = this.todaysPurchaseOrders.filter(\\r\\n            (val, i) => i < 10\\r\\n          );\\r\\n          //   // console.groupEnd();\\r\\n        })\\r\\n        .catch(error => console.error(error));\\r\\n    };\\r\\n\\r\\n    const getAllReceiveOrder = () => {\\r\\n      axios\\r\\n        .get(\\\"/api/receive-orders/get-all-receive-orders\\\")\\r\\n        .then(res => {\\r\\n          // console.groupCollapsed(\\\"Receive Orders\\\");\\r\\n          const allReceiveOrders = res.data.receive_orders;\\r\\n          //console.log('All receive Orders ->', allReceiveOrders)\\r\\n          this.todaysReceiveOrders = allReceiveOrders\\r\\n            ? allReceiveOrders.sort(\\r\\n                (a, b) => new Date(a.created_at) - new Date(b.created_at)\\r\\n              )\\r\\n            : [];\\r\\n          this.todaysReceiveOrders = this.todaysReceiveOrders.filter(\\r\\n            (val, i) => i < 10\\r\\n          );\\r\\n          // console.groupEnd();\\r\\n        })\\r\\n        .catch(error => console.error(error));\\r\\n    };\\r\\n\\r\\n    const getAllStockTransfer = () => {\\r\\n      axios\\r\\n        .get(\\\"/api/stock-transfers/get-all-stock-transfers\\\")\\r\\n        .then(res => {\\r\\n          //// console.group('Stock Transfer')\\r\\n          const allStockTransfer = res.data.stock_transfers;\\r\\n          //console.log('All Stock Transfers ->',JSON.parse(JSON.stringify({res:allStockTransfer})))\\r\\n          const stockTransferApproval = allStockTransfer.filter(\\r\\n            data => data.status === 0\\r\\n          );\\r\\n          this.stockTransfers = stockTransferApproval\\r\\n            ? stockTransferApproval.sort(\\r\\n                (a, b) => new Date(a.created_at) - new Date(b.created_at)\\r\\n              )\\r\\n            : [];\\r\\n          // console.groupEnd();\\r\\n        })\\r\\n        .catch(error => console.error(error));\\r\\n    };\\r\\n\\r\\n    const getAllStockRequest = () => {\\r\\n      axios\\r\\n        .get(\\\"/api/stock-requests/get-all-unapproved-stock-requests\\\")\\r\\n        .then(res => {\\r\\n          // console.groupCollapsed(\\\"Stock Requests\\\");\\r\\n          const allStockRequests = res.data.stock_requests;\\r\\n          const log = JSON.stringify({ stock_request: allStockRequests });\\r\\n          //console.log('All Stock Requests ->',JSON.parse(log))\\r\\n          this.stockRequests = allStockRequests\\r\\n            ? allStockRequests.sort(\\r\\n                (a, b) => new Date(a.created_at) - new Date(b.created_at)\\r\\n              )\\r\\n            : [];\\r\\n          // console.groupEnd();\\r\\n        })\\r\\n        .catch(error => console.error(error));\\r\\n    };\\r\\n\\r\\n    const getAllBills = () => {\\r\\n      axios\\r\\n        .get(\\\"/api/bill-payments/get-all-bill-payments\\\")\\r\\n        .then(res => {\\r\\n          // console.groupCollapsed(\\\"Bills Payment\\\");\\r\\n          const allBills = { bills: res.data.bills_payments };\\r\\n          const log = JSON.stringify(allBills);\\r\\n          //console.log('All Bills ->',JSON.parse(log))\\r\\n          // this.bills = allBills.sort((a,b)=>new Date(a.created_at)-new Date(b.created_at));\\r\\n          // console.groupEnd();\\r\\n        })\\r\\n        .catch(error => console.error(error));\\r\\n    };\\r\\n\\r\\n    const getData = async () => {\\r\\n      const res = await axios.get(\\\"/api/dashboard\\\");\\r\\n      console.groupCollapsed(\\\"Dashboard Request\\\");\\r\\n      console.log(\\\"[Dashboard]\\\", res.data);\\r\\n      console.groupEnd();\\r\\n      const {\\r\\n        pending_quotations,\\r\\n        pending_stock_requests,\\r\\n        pending_stock_transfers,\\r\\n        today_purchase_orders,\\r\\n        today_quotations,\\r\\n        shelf_days_per_item,\\r\\n        pending_purchase_orders\\r\\n      } = res.data.dashboard_payload;\\r\\n\\r\\n      // limiter\\r\\n      if (typeof shelf_days_per_item === \\\"array\\\") {\\r\\n        shelf_days_per_item = shelf_days_per_item.map((value, i) => {\\r\\n          if (i <= 10) {\\r\\n            return value;\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n\\r\\n      this.quotationsForApproval = pending_quotations;\\r\\n      this.stockRequests = pending_stock_requests;\\r\\n      this.stockTransfers = pending_stock_transfers;\\r\\n      this.purchaseOrders = pending_purchase_orders;\\r\\n      this.quotations = pending_quotations;\\r\\n      this.stocks = shelf_days_per_item;\\r\\n      this.todaysQuotations = today_quotations;\\r\\n      this.todaysPurchaseOrders = today_purchase_orders;\\r\\n    //   [{id:12312,number:12312}]\\r\\n    };\\r\\n\\r\\n    getData();\\r\\n    // getAllQuotations();\\r\\n    getAllInvoices();\\r\\n    getAllBills();\\r\\n    getAllReceiveOrder();\\r\\n    getAllInvoicePayments();\\r\\n  }\\r\\n};\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n.center {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n.card-min {\\r\\n  min-height: 200px;\\r\\n}\\r\\n.card-mod {\\r\\n  padding-top: 10px;\\r\\n}\\r\\n</style>\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///363\n");

/***/ }),

/***/ 364:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_regenerator__ = __webpack_require__(365);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_runtime_regenerator__);\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _readOnlyError(name) { throw new Error(\"\\\"\" + name + \"\\\" is read-only\"); }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar createBasicConfig = function createBasicConfig(type, labels, datasets, options) {\n  return {\n    type: type,\n    data: {\n      labels: labels,\n      datasets: datasets\n    },\n    options: options\n  };\n};\n\nvar generateChart = function generateChart(chartElement, chartOptions) {\n  return chartElement && chartOptions ? new Chart(chartElement, chartOptions) : new Chart();\n};\n\nvar convertToDate = function convertToDate(strDate) {\n  return new Date(strDate).toDateString();\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      selectedBranchWeek: \"\",\n      selectedTypeWeek: \"\",\n      ifReady: false,\n      chart: \"\",\n      salesReportChart: \"\",\n      todaysPurchaseOrderChart: \"\",\n      todaysReceivedOrderChart: \"\",\n      todaysProfitChart: \"\",\n      salesComparisonChart: \"\",\n      purchaseComparisonChart: \"\",\n      dateToday: new Date(),\n      stocks: [],\n      quotations: [],\n      quotationsForApproval: [],\n      todaysQuotations: [],\n      invoices: [],\n      purchaseOrders: [],\n      todaysPurchaseOrders: [],\n      bills: [],\n      todaysReceiveOrders: [],\n      receiveOrder: [],\n      todaysStockRequests: [],\n      stockRequests: [],\n      invoicePayment: \"\",\n      stockRequest: [],\n      stockTransfers: [],\n      options: [],\n      totalProfit: 0,\n      chartLabels: [\"Week 1\", \"Week 2\", \"Week 3\", \"Week 4\"],\n      salesTypeTableData: [],\n      salesTypeChartData: [{\n        label: \"Foods\",\n        data: [{\n          val: 1\n        }, {\n          val: 2\n        }, {\n          val: 3\n        }, {\n          val: 4\n        }]\n      }, {\n        label: \"Oats\",\n        data: [{\n          val: 5\n        }, {\n          val: 10\n        }, {\n          val: 30\n        }, {\n          val: 40\n        }]\n      }]\n    };\n  },\n  methods: {\n    changeBranchWeek: function changeBranchWeek() {//console.log(this.selectedBranchWeek)\n    },\n    changeTypeWeek: function changeTypeWeek() {\n      var _this = this;\n\n      //   console.log(this.selectedTypeWeek);\n      this.salesTypeChartData.map(function (data, i) {\n        if (data.label === _this.selectedTypeWeek) {\n          _this.salesTypeTableData = _this.salesTypeChartData[i].data;\n        }\n      });\n    },\n    kFormatter: function kFormatter(num) {\n      return num > 999 ? (num / 1000).toFixed(1) + \"K\" : num;\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    var weeks = [{\n      label: \"Drinks\",\n      data: [{\n        val: 1\n      }, {\n        val: 2\n      }, {\n        val: 3\n      }, {\n        val: 4\n      }]\n    }];\n\n    var createWeekData = function createWeekData(weekArray) {\n      return weekArray.map(function (week, i) {\n        return {\n          label: week.label,\n          data: week.data.map(function (data) {\n            return data.val;\n          }),\n          backgroundColor: \"rgba(54, 162, 235, \".concat(week.shade, \")\"),\n          borderColor: \"rgba(54, 162, 235, 1)\"\n        };\n      });\n    };\n\n    var createTypeChartData = function createTypeChartData(weekdata) {\n      return weekdata.map(function (arr) {\n        return {\n          label: arr.label,\n          data: arr.data,\n          backgroundColor: \"rgba(54, 162, 235, \".concat(arr.percent, \")\"),\n          borderColor: \"rgba(54, 162, 235, 1)\"\n        };\n      });\n    };\n\n    var createOptions = function createOptions(weekArray) {\n      return weekArray.map(function (data) {\n        return data.label;\n      });\n    };\n\n    this.salesTypeTableData = this.salesTypeChartData[0].data; // console.log(this.salesTypeTableData);\n\n    this.options = createOptions(this.salesTypeChartData); //console.clear();\n\n    var getAllQuotations = function getAllQuotations() {\n      axios.get(\"/api/quotations/get-all-quotations\").then(function (res) {\n        var allQuotations = res.data.quotations; //   // console.groupCollapsed(\"Quotation Request\");\n\n        var log = JSON.stringify(allQuotations); //console.log('All Quotation', JSON.parse(log));\n\n        _this2.quotations = allQuotations ? allQuotations.sort(function (a, b) {\n          return new Date(a.created_at) - new Date(b.created_at);\n        }) : [];\n        var issuedQuotations = _this2.quotationsForApproval = allQuotations.filter(function (quo) {\n          return quo.status === 0;\n        });\n        _this2.todaysQuotations = allQuotations.filter(function (quo) {\n          return quo.status === 0 && new Date(quo.created_at).getDate() === _this2.dateToday.getDate();\n        }); //console.log('Issued Quotations',issuedQuotations)\n        //   // console.groupEnd();\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    };\n\n    var getAllInvoices = function getAllInvoices() {\n      axios.get(\"/api/invoices/get-all-invoices\").then(function (res) {\n        //   // console.groupCollapsed(\"Invoice Request\");\n        var allInvoices = res.data.invoices.sort(function (a, b) {\n          return new Date(a.created_at) - new Date(b.created_at);\n        }); //console.log('All Invoices ->',allInvoices)\n        //   // console.groupEnd();\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    };\n\n    var getTotalProfit = function getTotalProfit(array) {\n      var tempAmount = 0;\n      var finalAmount = 0;\n\n      if (typeof array === \"array\") {\n        if (array.reduce) {\n          finalAmount = (_readOnlyError(\"finalAmount\"), array.reduce(function (prev, curr) {\n            var prevAmount = prev.amount ? prev.amount : 0;\n            var currAmount = curr.amount ? curr.amount : 0;\n            return parseInt(prevAmount) + parseInt(currAmount);\n          }));\n        }\n      }\n\n      return finalAmount ? finalAmount : 0;\n    };\n\n    var getAllInvoicePayments = function getAllInvoicePayments() {\n      axios.get(\"/api/invoice-payments/get-all-invoice-payments\").then(function (res) {\n        //   // console.groupCollapsed(\"Invoice Payments\");\n        var allInvoices = res.data.invoice_payments;\n        _this2.invoices = allInvoices ? allInvoices.sort(function (a, b) {\n          return new Date(a.created_at) - new Date(b.created_at);\n        }) : []; //console.log('All Invoices ->',JSON.parse(JSON.stringify({res:allInvoices})))\n\n        var testData = JSON.parse(JSON.stringify({\n          res: allInvoices\n        }));\n        _this2.totalProfit = getTotalProfit(_this2.invoices); //console.log('Total Profit ->', this.totalProfit)\n\n        _this2.total; // Separate by Month\n\n        var monthData = testData.res.filter(function (data) {\n          return new Date(data.created_at).getMonth() === new Date().getMonth();\n        }); //console.log('Month Data ->', monthData)\n        //Sort Month by first to last\n\n        var sortedMonthData = monthData.sort(function (a, b) {\n          return new Date(a.created_at) - new Date(b.created_at);\n        });\n\n        Date.prototype.getWeekNumber = function () {\n          var d = new Date(Date.UTC(this.getFullYear(), this.getMonth(), this.getDate()));\n          var dayNum = d.getUTCDay() || 7;\n          d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n          var yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n          return Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\n        }; // Separate Month Data to Week Data\n\n\n        var weekData = [[], [], [], []];\n        var tempData = [];\n\n        function weekOfMonth(m) {\n          return m.week() - moment(m).startOf(\"month\").week() + 1;\n        }\n\n        sortedMonthData.map(function (data) {\n          var weeknumber = weekOfMonth(moment(data.created_at));\n          weekData[weeknumber - 1].push(data);\n        }); //console.log('Week Data ->', weekData)\n        //   // console.groupEnd();\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    };\n\n    var getAllPurchaseOrders = function getAllPurchaseOrders() {\n      axios.get(\"/api/purchase-orders/get-all-purchase-orders\").then(function (res) {\n        //   // console.groupCollapsed(\"Purchase Orders\");\n        var allPurchaseOrders = res.data.purchase_orders; //console.log('All Purchase Orders ->',JSON.parse(JSON.stringify({res:res.data.purchase_orders})))\n\n        var issuedReceiveOrders = allPurchaseOrders.filter(function (data) {\n          return data.status === 0;\n        }); //console.log('Issued Purchase Orders ->', allPurchaseOrders)\n\n        _this2.todaysPurchaseOrders = allPurchaseOrders.sort(function (a, b) {\n          return new Date(a.created_at) - new Date(b.created_at);\n        });\n        _this2.purchaseOrders = _this2.todaysPurchaseOrders.filter(function (val, i) {\n          return i < 10;\n        }); //   // console.groupEnd();\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    };\n\n    var getAllReceiveOrder = function getAllReceiveOrder() {\n      axios.get(\"/api/receive-orders/get-all-receive-orders\").then(function (res) {\n        // console.groupCollapsed(\"Receive Orders\");\n        var allReceiveOrders = res.data.receive_orders; //console.log('All receive Orders ->', allReceiveOrders)\n\n        _this2.todaysReceiveOrders = allReceiveOrders ? allReceiveOrders.sort(function (a, b) {\n          return new Date(a.created_at) - new Date(b.created_at);\n        }) : [];\n        _this2.todaysReceiveOrders = _this2.todaysReceiveOrders.filter(function (val, i) {\n          return i < 10;\n        }); // console.groupEnd();\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    };\n\n    var getAllStockTransfer = function getAllStockTransfer() {\n      axios.get(\"/api/stock-transfers/get-all-stock-transfers\").then(function (res) {\n        //// console.group('Stock Transfer')\n        var allStockTransfer = res.data.stock_transfers; //console.log('All Stock Transfers ->',JSON.parse(JSON.stringify({res:allStockTransfer})))\n\n        var stockTransferApproval = allStockTransfer.filter(function (data) {\n          return data.status === 0;\n        });\n        _this2.stockTransfers = stockTransferApproval ? stockTransferApproval.sort(function (a, b) {\n          return new Date(a.created_at) - new Date(b.created_at);\n        }) : []; // console.groupEnd();\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    };\n\n    var getAllStockRequest = function getAllStockRequest() {\n      axios.get(\"/api/stock-requests/get-all-unapproved-stock-requests\").then(function (res) {\n        // console.groupCollapsed(\"Stock Requests\");\n        var allStockRequests = res.data.stock_requests;\n        var log = JSON.stringify({\n          stock_request: allStockRequests\n        }); //console.log('All Stock Requests ->',JSON.parse(log))\n\n        _this2.stockRequests = allStockRequests ? allStockRequests.sort(function (a, b) {\n          return new Date(a.created_at) - new Date(b.created_at);\n        }) : []; // console.groupEnd();\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    };\n\n    var getAllBills = function getAllBills() {\n      axios.get(\"/api/bill-payments/get-all-bill-payments\").then(function (res) {\n        // console.groupCollapsed(\"Bills Payment\");\n        var allBills = {\n          bills: res.data.bills_payments\n        };\n        var log = JSON.stringify(allBills); //console.log('All Bills ->',JSON.parse(log))\n        // this.bills = allBills.sort((a,b)=>new Date(a.created_at)-new Date(b.created_at));\n        // console.groupEnd();\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    };\n\n    var getData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      __WEBPACK_IMPORTED_MODULE_0__babel_runtime_regenerator___default.a.mark(function _callee() {\n        var res, _res$data$dashboard_p, pending_quotations, pending_stock_requests, pending_stock_transfers, today_purchase_orders, today_quotations, shelf_days_per_item, pending_purchase_orders;\n\n        return __WEBPACK_IMPORTED_MODULE_0__babel_runtime_regenerator___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"/api/dashboard\");\n\n              case 2:\n                res = _context.sent;\n                console.groupCollapsed(\"Dashboard Request\");\n                console.log(\"[Dashboard]\", res.data);\n                console.groupEnd();\n                _res$data$dashboard_p = res.data.dashboard_payload, pending_quotations = _res$data$dashboard_p.pending_quotations, pending_stock_requests = _res$data$dashboard_p.pending_stock_requests, pending_stock_transfers = _res$data$dashboard_p.pending_stock_transfers, today_purchase_orders = _res$data$dashboard_p.today_purchase_orders, today_quotations = _res$data$dashboard_p.today_quotations, shelf_days_per_item = _res$data$dashboard_p.shelf_days_per_item, pending_purchase_orders = _res$data$dashboard_p.pending_purchase_orders; // limiter\n\n                if (typeof shelf_days_per_item === \"array\") {\n                  shelf_days_per_item = (_readOnlyError(\"shelf_days_per_item\"), shelf_days_per_item.map(function (value, i) {\n                    if (i <= 10) {\n                      return value;\n                    }\n                  }));\n                }\n\n                _this2.quotationsForApproval = pending_quotations;\n                _this2.stockRequests = pending_stock_requests;\n                _this2.stockTransfers = pending_stock_transfers;\n                _this2.purchaseOrders = pending_purchase_orders;\n                _this2.quotations = pending_quotations;\n                _this2.stocks = shelf_days_per_item;\n                _this2.todaysQuotations = today_quotations;\n                _this2.todaysPurchaseOrders = today_purchase_orders; //   [{id:12312,number:12312}]\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getData(); // getAllQuotations();\n\n    getAllInvoices();\n    getAllBills();\n    getAllReceiveOrder();\n    getAllInvoicePayments();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///364\n");

/***/ }),

/***/ 365:
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(366);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanM/MTI3ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQyxHQUFxQiIsImZpbGUiOiIzNjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWdlbmVyYXRvci1ydW50aW1lXCIpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDM2NVxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///365\n");

/***/ }),

/***/ 366:
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(367);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLW1vZHVsZS5qcz84ZjIxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQixtQkFBTyxDQUFDLEdBQVc7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBIiwiZmlsZSI6IjM2Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLy8gVGhpcyBtZXRob2Qgb2Ygb2J0YWluaW5nIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgb2JqZWN0IG5lZWRzIHRvIGJlXG4vLyBrZXB0IGlkZW50aWNhbCB0byB0aGUgd2F5IGl0IGlzIG9idGFpbmVkIGluIHJ1bnRpbWUuanNcbnZhciBnID0gKGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcyB8fCAodHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgJiYgc2VsZik7XG59KSgpIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcblxuLy8gVXNlIGBnZXRPd25Qcm9wZXJ0eU5hbWVzYCBiZWNhdXNlIG5vdCBhbGwgYnJvd3NlcnMgc3VwcG9ydCBjYWxsaW5nXG4vLyBgaGFzT3duUHJvcGVydHlgIG9uIHRoZSBnbG9iYWwgYHNlbGZgIG9iamVjdCBpbiBhIHdvcmtlci4gU2VlICMxODMuXG52YXIgaGFkUnVudGltZSA9IGcucmVnZW5lcmF0b3JSdW50aW1lICYmXG4gIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGcpLmluZGV4T2YoXCJyZWdlbmVyYXRvclJ1bnRpbWVcIikgPj0gMDtcblxuLy8gU2F2ZSB0aGUgb2xkIHJlZ2VuZXJhdG9yUnVudGltZSBpbiBjYXNlIGl0IG5lZWRzIHRvIGJlIHJlc3RvcmVkIGxhdGVyLlxudmFyIG9sZFJ1bnRpbWUgPSBoYWRSdW50aW1lICYmIGcucmVnZW5lcmF0b3JSdW50aW1lO1xuXG4vLyBGb3JjZSByZWV2YWx1dGF0aW9uIG9mIHJ1bnRpbWUuanMuXG5nLnJlZ2VuZXJhdG9yUnVudGltZSA9IHVuZGVmaW5lZDtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi9ydW50aW1lXCIpO1xuXG5pZiAoaGFkUnVudGltZSkge1xuICAvLyBSZXN0b3JlIHRoZSBvcmlnaW5hbCBydW50aW1lLlxuICBnLnJlZ2VuZXJhdG9yUnVudGltZSA9IG9sZFJ1bnRpbWU7XG59IGVsc2Uge1xuICAvLyBSZW1vdmUgdGhlIGdsb2JhbCBwcm9wZXJ0eSBhZGRlZCBieSBydW50aW1lLmpzLlxuICB0cnkge1xuICAgIGRlbGV0ZSBnLnJlZ2VuZXJhdG9yUnVudGltZTtcbiAgfSBjYXRjaChlKSB7XG4gICAgZy5yZWdlbmVyYXRvclJ1bnRpbWUgPSB1bmRlZmluZWQ7XG4gIH1cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS1tb2R1bGUuanNcbi8vIG1vZHVsZSBpZCA9IDM2NlxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///366\n");

/***/ }),

/***/ 367:
/***/ (function(module, exports) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///367\n");

/***/ }),

/***/ 368:
/***/ (function(module, exports, __webpack_require__) {

eval("var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"div\",\n      {\n        class: this.$store.state.showSidebar\n          ? \"content-title\"\n          : \"spacer content-title\"\n      },\n      [_c(\"h4\", { staticClass: \"module-title\" }, [_vm._v(\"DASHBOARD\")])]\n    ),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"mx-md-4 px-0\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-md-8 col-sm-6 pr-0\" }, [\n          _c(\"div\", { staticClass: \"grid\" }, [\n            _c(\"div\", { staticClass: \"row mt-3\" }, [\n              _c(\"div\", { staticClass: \"col-6 pr-0\" }, [\n                _c(\"div\", { staticClass: \"card\" }, [\n                  _vm._m(0),\n                  _vm._v(\" \"),\n                  this.quotationsForApproval &&\n                  this.quotationsForApproval.length > 0\n                    ? _c(\n                        \"span\",\n                        _vm._l(this.quotationsForApproval, function(quote) {\n                          return _c(\n                            \"ul\",\n                            {\n                              key: quote.id,\n                              staticClass: \"list-group list-group-flush\"\n                            },\n                            [\n                              _c(\n                                \"li\",\n                                { staticClass: \"list-group-item\" },\n                                [\n                                  _vm._v(\n                                    \"\\n                      \" +\n                                      _vm._s(quote.number) +\n                                      \"\\n                      \"\n                                  ),\n                                  _c(\n                                    \"router-link\",\n                                    {\n                                      staticClass:\n                                        \"btn float-right btn-sm btn-secondary\",\n                                      attrs: {\n                                        tag: \"button\",\n                                        to: {\n                                          name: \"quotations.view\",\n                                          params: { id: quote.id }\n                                        },\n                                        type: \"button\"\n                                      }\n                                    },\n                                    [_vm._v(\"View\")]\n                                  )\n                                ],\n                                1\n                              )\n                            ]\n                          )\n                        })\n                      )\n                    : _c(\"span\", [_vm._m(1)])\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-6\" }, [\n                _c(\"div\", { staticClass: \"card\" }, [\n                  _vm._m(2),\n                  _vm._v(\" \"),\n                  this.stockRequests && this.stockRequests.length > 0\n                    ? _c(\n                        \"span\",\n                        _vm._l(this.stockRequests, function(stock) {\n                          return _c(\n                            \"ul\",\n                            {\n                              key: stock.id,\n                              staticClass: \"list-group list-group-flush\"\n                            },\n                            [\n                              _c(\n                                \"li\",\n                                { staticClass: \"list-group-item\" },\n                                [\n                                  _vm._v(\n                                    \"\\n                      \" +\n                                      _vm._s(stock.number) +\n                                      \"\\n                      \"\n                                  ),\n                                  _c(\n                                    \"router-link\",\n                                    {\n                                      staticClass:\n                                        \"btn float-right btn-sm btn-secondary\",\n                                      attrs: {\n                                        to: {\n                                          name: \"stock-requests.view\",\n                                          params: { id: stock.id }\n                                        },\n                                        tag: \"button\"\n                                      }\n                                    },\n                                    [_vm._v(\"View\")]\n                                  )\n                                ],\n                                1\n                              )\n                            ]\n                          )\n                        })\n                      )\n                    : _c(\"span\", [_vm._m(3)])\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-6 mt-2 pr-0\" }, [\n                _c(\"div\", { staticClass: \"card\" }, [\n                  _vm._m(4),\n                  _vm._v(\" \"),\n                  this.stockTransfers && this.stockTransfers.length > 0\n                    ? _c(\n                        \"span\",\n                        _vm._l(this.stockTransfers, function(stock) {\n                          return _c(\n                            \"ul\",\n                            {\n                              key: stock.id,\n                              staticClass: \"list-group list-group-flush\"\n                            },\n                            [\n                              _c(\n                                \"li\",\n                                { staticClass: \"list-group-item\" },\n                                [\n                                  _vm._v(\n                                    \"\\n                      \" +\n                                      _vm._s(stock.number) +\n                                      \"\\n                      \"\n                                  ),\n                                  _c(\n                                    \"router-link\",\n                                    {\n                                      staticClass:\n                                        \"btn float-right btn-secondary btn-sm\",\n                                      attrs: {\n                                        tag: \"button\",\n                                        to: {\n                                          name: \"stock-transfers.view\",\n                                          params: { id: stock.id }\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"View\")]\n                                  )\n                                ],\n                                1\n                              )\n                            ]\n                          )\n                        })\n                      )\n                    : _c(\"span\", [_vm._m(5)])\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-6 mt-2\" }, [\n                _c(\"div\", { staticClass: \"card\" }, [\n                  _vm._m(6),\n                  _vm._v(\" \"),\n                  this.purchaseOrders && this.purchaseOrders.length > 0\n                    ? _c(\n                        \"span\",\n                        _vm._l(this.purchaseOrders, function(po) {\n                          return _c(\n                            \"ul\",\n                            {\n                              key: po.id,\n                              staticClass: \"list-group list-group-flush\"\n                            },\n                            [\n                              _c(\n                                \"li\",\n                                { staticClass: \"list-group-item\" },\n                                [\n                                  _vm._v(\n                                    \"\\n                      \" +\n                                      _vm._s(po.reference_number) +\n                                      \"\\n                      \"\n                                  ),\n                                  _c(\n                                    \"router-link\",\n                                    {\n                                      staticClass:\n                                        \"btn float-right btn-secondary btn-sm\",\n                                      attrs: {\n                                        tag: \"button\",\n                                        to: {\n                                          name: \"purchase-orders.view\",\n                                          params: { id: po.id }\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"View\")]\n                                  )\n                                ],\n                                1\n                              )\n                            ]\n                          )\n                        })\n                      )\n                    : _c(\"span\", [_vm._m(7)])\n                ])\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"row mt-3\" }, [\n              _c(\"div\", { staticClass: \"col-12\" }, [\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\"div\", { staticClass: \"col-md-4 col-sm-12\" }, [\n                    _c(\"div\", { staticClass: \"card card-min\" }, [\n                      _c(\"div\", { staticClass: \"card-body row\" }, [\n                        _c(\n                          \"div\",\n                          {\n                            staticClass:\n                              \"col-md-12 col-sm-12 text-center center\"\n                          },\n                          [\n                            _c(\"span\", { staticClass: \"display-4\" }, [\n                              _vm._v(_vm._s(_vm.todaysPurchaseOrders.length))\n                            ])\n                          ]\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _vm._m(8)\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-md-4 col-sm-12\" }, [\n                    _c(\"div\", { staticClass: \"card card-min\" }, [\n                      _c(\"div\", { staticClass: \"card-body row\" }, [\n                        _c(\n                          \"div\",\n                          {\n                            staticClass:\n                              \"col-md-12 col-sm-12 text-center center\"\n                          },\n                          [\n                            _c(\"span\", { staticClass: \"display-4\" }, [\n                              _vm._v(_vm._s(_vm.todaysReceiveOrders.length))\n                            ])\n                          ]\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _vm._m(9)\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-md-4 col-sm-12\" }, [\n                    _c(\"div\", { staticClass: \"card card-min\" }, [\n                      _c(\"div\", { staticClass: \"card-body row\" }, [\n                        _c(\n                          \"div\",\n                          {\n                            staticClass:\n                              \"col-md-12 col-sm-12 text-center center\"\n                          },\n                          [\n                            _c(\"span\", { staticClass: \"display-4\" }, [\n                              _vm._v(_vm._s(this.kFormatter(_vm.totalProfit)))\n                            ])\n                          ]\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _vm._m(10)\n                    ])\n                  ])\n                ])\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"row mt-3\" })\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-md-4 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"row mt-3\" }, [\n            _c(\"div\", { staticClass: \"col-12\" }, [\n              _c(\"div\", { staticClass: \"card\" }, [\n                _vm._m(11),\n                _vm._v(\" \"),\n                this.todaysPurchaseOrders &&\n                this.todaysPurchaseOrders.length > 0\n                  ? _c(\n                      \"span\",\n                      _vm._l(this.todaysPurchaseOrders, function(po) {\n                        return _c(\n                          \"ul\",\n                          {\n                            key: po.id,\n                            staticClass: \"list-group list-group-flush\"\n                          },\n                          [\n                            _c(\n                              \"li\",\n                              { staticClass: \"list-group-item\" },\n                              [\n                                _vm._v(\n                                  \"\\n                    \" +\n                                    _vm._s(po.reference_number) +\n                                    \"\\n                    \"\n                                ),\n                                _c(\n                                  \"router-link\",\n                                  {\n                                    staticClass:\n                                      \"btn float-right btn-sm btn-secondary\",\n                                    attrs: {\n                                      tag: \"button\",\n                                      to: {\n                                        name: \"purchase-orders.view\",\n                                        params: { id: po.id }\n                                      },\n                                      type: \"button\"\n                                    }\n                                  },\n                                  [_vm._v(\"View\")]\n                                )\n                              ],\n                              1\n                            )\n                          ]\n                        )\n                      })\n                    )\n                  : _c(\"span\", [_vm._m(12)])\n              ])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"row mt-2\" }, [\n            _c(\"div\", { staticClass: \"col-12\" }, [\n              _c(\"div\", { staticClass: \"card\" }, [\n                _vm._m(13),\n                _vm._v(\" \"),\n                this.quotations && this.quotations.length > 0\n                  ? _c(\n                      \"span\",\n                      _vm._l(this.quotations, function(quote) {\n                        return _c(\n                          \"ul\",\n                          {\n                            key: quote.id,\n                            staticClass: \"list-group list-group-flush\"\n                          },\n                          [\n                            _c(\n                              \"li\",\n                              { staticClass: \"list-group-item\" },\n                              [\n                                _vm._v(\n                                  \"\\n                    \" +\n                                    _vm._s(quote.number) +\n                                    \"\\n                    \"\n                                ),\n                                _c(\n                                  \"router-link\",\n                                  {\n                                    staticClass:\n                                      \"btn float-right btn-sm btn-secondary\",\n                                    attrs: {\n                                      tag: \"button\",\n                                      to: {\n                                        name: \"quotations.view\",\n                                        params: { id: quote.id }\n                                      },\n                                      type: \"button\"\n                                    }\n                                  },\n                                  [_vm._v(\"View\")]\n                                )\n                              ],\n                              1\n                            )\n                          ]\n                        )\n                      })\n                    )\n                  : _c(\"span\", [_vm._m(14)])\n              ])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"row mt-2\" }, [\n            _c(\"div\", { staticClass: \"col-12\" }, [\n              _c(\"div\", { staticClass: \"card\" }, [\n                _vm._m(15),\n                _vm._v(\" \"),\n                this.stocks && this.stocks.length > 0\n                  ? _c(\n                      \"span\",\n                      _vm._l(this.stocks, function(stock) {\n                        return _c(\n                          \"ul\",\n                          {\n                            key: stock.id,\n                            staticClass: \"list-group list-group-flush\"\n                          },\n                          [\n                            _c(\n                              \"li\",\n                              { staticClass: \"list-group-item\" },\n                              [\n                                _vm._v(\n                                  \"\\n                    \" +\n                                    _vm._s(stock.item.name) +\n                                    \"\\n                    \"\n                                ),\n                                _c(\n                                  \"router-link\",\n                                  {\n                                    staticClass:\n                                      \"btn float-right btn-sm btn-secondary\",\n                                    attrs: {\n                                      tag: \"button\",\n                                      to: {\n                                        name: \"items.view\",\n                                        params: { id: stock.id }\n                                      },\n                                      type: \"button\"\n                                    }\n                                  },\n                                  [_vm._v(\"View\")]\n                                )\n                              ],\n                              1\n                            )\n                          ]\n                        )\n                      })\n                    )\n                  : _c(\"span\", [_vm._m(16)])\n              ])\n            ])\n          ])\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-header\" }, [\n      _c(\"span\", { staticClass: \"subcontent-header\" }, [\n        _c(\"strong\", [_vm._v(\"Quotations for Approval\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { staticClass: \"list-group list-group-flush\" }, [\n      _c(\"li\", { staticClass: \"list-group-item\" }, [\n        _vm._v(\"No Pending Quotation\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-header\" }, [\n      _c(\"span\", { staticClass: \"subcontent-header\" }, [\n        _c(\"strong\", [_vm._v(\"Stock Requests for Approval\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { staticClass: \"list-group list-group-flush\" }, [\n      _c(\"li\", { staticClass: \"list-group-item\" }, [\n        _vm._v(\"No Pending Stock Request\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-header\" }, [\n      _c(\"span\", { staticClass: \"subcontent-header\" }, [\n        _c(\"strong\", [_vm._v(\"Stock Transfers for Approval\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { staticClass: \"list-group list-group-flush\" }, [\n      _c(\"li\", { staticClass: \"list-group-item\" }, [\n        _vm._v(\"No Pendting Stock Transfer\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-header\" }, [\n      _c(\"span\", { staticClass: \"subcontent-header\" }, [\n        _c(\"strong\", [_vm._v(\"Purchase Orders for Approval\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { staticClass: \"list-group list-group-flush\" }, [\n      _c(\"li\", { staticClass: \"list-group-item\" }, [_vm._v(\"No Pending Order\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-footer text-center\" }, [\n      _c(\"strong\", [_vm._v(\"Today's Issued Purchase Order\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-footer text-center\" }, [\n      _c(\"strong\", [_vm._v(\"Today's Issued Received Order\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-footer text-center\" }, [\n      _c(\"strong\", [_vm._v(\"Today's Profit\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-header\" }, [\n      _c(\"span\", { staticClass: \"subcontent-header\" }, [\n        _c(\"strong\", [_vm._v(\"Latest Purchase Orders\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { staticClass: \"list-group list-group-flush\" }, [\n      _c(\"li\", { staticClass: \"list-group-item\" }, [\n        _vm._v(\"No Purchase Order Available\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-header\" }, [\n      _c(\"span\", { staticClass: \"subcontent-header\" }, [\n        _c(\"strong\", [_vm._v(\"Latest Quotations\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { staticClass: \"list-group list-group-flush\" }, [\n      _c(\"li\", { staticClass: \"list-group-item\" }, [\n        _vm._v(\"No Quotations Available\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-header\" }, [\n      _c(\"span\", { staticClass: \"subcontent-header\" }, [\n        _c(\"strong\", [_vm._v(\"Shelf Days Per Item\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { staticClass: \"list-group list-group-flush\" }, [\n      _c(\"li\", { staticClass: \"list-group-item\" }, [\n        _vm._v(\"No Stock Available\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\nmodule.exports = { render: render, staticRenderFns: staticRenderFns }\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-1d78e5d0\", module.exports)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///368\n");

/***/ })

});