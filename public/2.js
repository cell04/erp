webpackJsonp([2],{

/***/ 354:
/***/ (function(module, exports, __webpack_require__) {

eval("var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  __webpack_require__(586)\n}\nvar normalizeComponent = __webpack_require__(13)\n/* script */\nvar __vue_script__ = __webpack_require__(588)\n/* template */\nvar __vue_template__ = __webpack_require__(589)\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"resources/js/views/unit-of-measurements/View.vue\"\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-864bb83e\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-864bb83e\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvdmlld3MvdW5pdC1vZi1tZWFzdXJlbWVudHMvVmlldy52dWU/YjNmNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLG1CQUFPLENBQUMsR0FBMFE7QUFDcFI7QUFDQSx5QkFBeUIsbUJBQU8sQ0FBQyxFQUErRDtBQUNoRztBQUNBLHFCQUFxQixtQkFBTyxDQUFDLEdBQXNZO0FBQ25hO0FBQ0EsdUJBQXVCLG1CQUFPLENBQUMsR0FBb087QUFDblE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLElBQUksS0FBVSxHQUFHO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDOztBQUVEIiwiZmlsZSI6IjM1NC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBkaXNwb3NlZCA9IGZhbHNlXG5mdW5jdGlvbiBpbmplY3RTdHlsZSAoc3NyQ29udGV4dCkge1xuICBpZiAoZGlzcG9zZWQpIHJldHVyblxuICByZXF1aXJlKFwiISF2dWUtc3R5bGUtbG9hZGVyIWNzcy1sb2FkZXI/c291cmNlTWFwIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlci9pbmRleD97XFxcInZ1ZVxcXCI6dHJ1ZSxcXFwiaWRcXFwiOlxcXCJkYXRhLXYtODY0YmI4M2VcXFwiLFxcXCJzY29wZWRcXFwiOmZhbHNlLFxcXCJoYXNJbmxpbmVDb25maWdcXFwiOnRydWV9IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXN0eWxlcyZpbmRleD0wIS4vVmlldy52dWVcIilcbn1cbnZhciBub3JtYWxpemVDb21wb25lbnQgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9jb21wb25lbnQtbm9ybWFsaXplclwiKVxuLyogc2NyaXB0ICovXG52YXIgX192dWVfc2NyaXB0X18gPSByZXF1aXJlKFwiISFiYWJlbC1sb2FkZXI/e1xcXCJjYWNoZURpcmVjdG9yeVxcXCI6dHJ1ZSxcXFwicHJlc2V0c1xcXCI6W1tcXFwiQGJhYmVsL3ByZXNldC1lbnZcXFwiLHtcXFwibW9kdWxlc1xcXCI6ZmFsc2UsXFxcInRhcmdldHNcXFwiOntcXFwiYnJvd3NlcnNcXFwiOltcXFwiPiAyJVxcXCJdfSxcXFwiZm9yY2VBbGxUcmFuc2Zvcm1zXFxcIjp0cnVlfV1dLFxcXCJwbHVnaW5zXFxcIjpbXFxcIkBiYWJlbC9wbHVnaW4tcHJvcG9zYWwtb2JqZWN0LXJlc3Qtc3ByZWFkXFxcIixbXFxcIkBiYWJlbC9wbHVnaW4tdHJhbnNmb3JtLXJ1bnRpbWVcXFwiLHtcXFwiaGVscGVyc1xcXCI6ZmFsc2V9XSxcXFwic3ludGF4LWR5bmFtaWMtaW1wb3J0XFxcIl19IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXNjcmlwdCZpbmRleD0wIS4vVmlldy52dWVcIilcbi8qIHRlbXBsYXRlICovXG52YXIgX192dWVfdGVtcGxhdGVfXyA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleD97XFxcImlkXFxcIjpcXFwiZGF0YS12LTg2NGJiODNlXFxcIixcXFwiaGFzU2NvcGVkXFxcIjpmYWxzZSxcXFwiYnVibGVcXFwiOntcXFwidHJhbnNmb3Jtc1xcXCI6e319fSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vVmlldy52dWVcIilcbi8qIHRlbXBsYXRlIGZ1bmN0aW9uYWwgKi9cbnZhciBfX3Z1ZV90ZW1wbGF0ZV9mdW5jdGlvbmFsX18gPSBmYWxzZVxuLyogc3R5bGVzICovXG52YXIgX192dWVfc3R5bGVzX18gPSBpbmplY3RTdHlsZVxuLyogc2NvcGVJZCAqL1xudmFyIF9fdnVlX3Njb3BlSWRfXyA9IG51bGxcbi8qIG1vZHVsZUlkZW50aWZpZXIgKHNlcnZlciBvbmx5KSAqL1xudmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18gPSBudWxsXG52YXIgQ29tcG9uZW50ID0gbm9ybWFsaXplQ29tcG9uZW50KFxuICBfX3Z1ZV9zY3JpcHRfXyxcbiAgX192dWVfdGVtcGxhdGVfXyxcbiAgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fLFxuICBfX3Z1ZV9zdHlsZXNfXyxcbiAgX192dWVfc2NvcGVJZF9fLFxuICBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fXG4pXG5Db21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInJlc291cmNlcy9qcy92aWV3cy91bml0LW9mLW1lYXN1cmVtZW50cy9WaWV3LnZ1ZVwiXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHtcbiAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgZmFsc2UpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi04NjRiYjgzZVwiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTg2NGJiODNlXCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9XG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoZGF0YSkge1xuICAgIGRpc3Bvc2VkID0gdHJ1ZVxuICB9KVxufSkoKX1cblxubW9kdWxlLmV4cG9ydHMgPSBDb21wb25lbnQuZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9yZXNvdXJjZXMvanMvdmlld3MvdW5pdC1vZi1tZWFzdXJlbWVudHMvVmlldy52dWVcbi8vIG1vZHVsZSBpZCA9IDM1NFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///354\n");

/***/ }),

/***/ 586:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(587);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(15)(\"6b4b0758\", content, false, {});\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-864bb83e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./View.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-864bb83e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./View.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvdmlld3MvdW5pdC1vZi1tZWFzdXJlbWVudHMvVmlldy52dWU/OTRlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxHQUFpUztBQUN2VCw0Q0FBNEMsUUFBUztBQUNyRDtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLEVBQW1FLGdDQUFnQztBQUN4SDtBQUNBLEdBQUcsS0FBVTtBQUNiO0FBQ0E7QUFDQSxnSkFBZ0osa0ZBQWtGO0FBQ2xPLHlKQUF5SixrRkFBa0Y7QUFDM087QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QyIsImZpbGUiOiI1ODYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlci9pbmRleC5qcz97XFxcInZ1ZVxcXCI6dHJ1ZSxcXFwiaWRcXFwiOlxcXCJkYXRhLXYtODY0YmI4M2VcXFwiLFxcXCJzY29wZWRcXFwiOmZhbHNlLFxcXCJoYXNJbmxpbmVDb25maWdcXFwiOnRydWV9IS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlcyZpbmRleD0wIS4vVmlldy52dWVcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKShcIjZiNGIwNzU4XCIsIGNvbnRlbnQsIGZhbHNlLCB7fSk7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG4gLy8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3NcbiBpZighY29udGVudC5sb2NhbHMpIHtcbiAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi04NjRiYjgzZVxcXCIsXFxcInNjb3BlZFxcXCI6ZmFsc2UsXFxcImhhc0lubGluZUNvbmZpZ1xcXCI6dHJ1ZX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9WaWV3LnZ1ZVwiLCBmdW5jdGlvbigpIHtcbiAgICAgdmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXAhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi04NjRiYjgzZVxcXCIsXFxcInNjb3BlZFxcXCI6ZmFsc2UsXFxcImhhc0lubGluZUNvbmZpZ1xcXCI6dHJ1ZX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9WaWV3LnZ1ZVwiKTtcbiAgICAgaWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG4gICAgIHVwZGF0ZShuZXdDb250ZW50KTtcbiAgIH0pO1xuIH1cbiAvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG4gbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlciEuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3NvdXJjZU1hcCEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlcj97XCJ2dWVcIjp0cnVlLFwiaWRcIjpcImRhdGEtdi04NjRiYjgzZVwiLFwic2NvcGVkXCI6ZmFsc2UsXCJoYXNJbmxpbmVDb25maWdcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlcyZpbmRleD0wIS4vcmVzb3VyY2VzL2pzL3ZpZXdzL3VuaXQtb2YtbWVhc3VyZW1lbnRzL1ZpZXcudnVlXG4vLyBtb2R1bGUgaWQgPSA1ODZcbi8vIG1vZHVsZSBjaHVua3MgPSAyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///586\n");

/***/ }),

/***/ 587:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(14)(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.dateStyle input:-moz-read-only {\\n    background-color: #ffffff !important;\\n}\\n.dateStyle input:read-only {\\n    background-color: #ffffff !important;\\n}\\n.switch {\\n    position: relative;\\n    display: inline-block;\\n    width: 90px;\\n    height: 34px;\\n}\\n.switch input {display:none;\\n}\\n.slider {\\n    position: absolute;\\n    cursor: pointer;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background-color: #8E8E8E;\\n    -webkit-transition: .4s;\\n    transition: .4s;\\n}\\n.slider:before {\\n    position: absolute;\\n    content: \\\"\\\";\\n    height: 26px;\\n    width: 26px;\\n    left: 4px;\\n    bottom: 4px;\\n    background-color: white;\\n    -webkit-transition: .4s;\\n    transition: .4s;\\n}\\ninput:checked + .slider {\\n    background-color: #0CC27E;\\n}\\ninput:focus + .slider {\\n    -webkit-box-shadow: 0 0 1px #2196F3;\\n            box-shadow: 0 0 1px #2196F3;\\n}\\ninput:checked + .slider:before {\\n    -webkit-transform: translateX(55px);\\n    transform: translateX(55px);\\n}\\n\\n/*------ ADDED CSS ---------*/\\n.on\\n{\\n    display: none;\\n}\\n.on, .off\\n{\\n    color: white;\\n    position: absolute;\\n    -webkit-transform: translate(-50%,-50%);\\n            transform: translate(-50%,-50%);\\n    top: 50%;\\n}\\n.on \\n{\\n    left: 45%;\\n}\\n.off \\n{\\n    left: 55%;\\n}\\ninput:checked+ .slider .on\\n{display: block;\\n}\\ninput:checked + .slider .off\\n{display: none;\\n}\\n\\n/*--------- END --------*/\\n\\n/* Rounded sliders */\\n.slider.round {\\n    border-radius: 34px;\\n}\\n.slider.round:before {\\n    border-radius: 50%;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"/Users/alvenmac/code/tradesoftph/inventory/resources/js/views/unit-of-measurements/resources/js/views/unit-of-measurements/View.vue\"],\"names\":[],\"mappings\":\";AAiIA;IACA,qCAAA;CACA;AAFA;IACA,qCAAA;CACA;AAEA;IACA,mBAAA;IACA,sBAAA;IACA,YAAA;IACA,aAAA;CACA;AAEA,eAAA,aAAA;CAAA;AAEA;IACA,mBAAA;IACA,gBAAA;IACA,OAAA;IACA,QAAA;IACA,SAAA;IACA,UAAA;IACA,0BAAA;IACA,wBAAA;IACA,gBAAA;CACA;AAEA;IACA,mBAAA;IACA,YAAA;IACA,aAAA;IACA,YAAA;IACA,UAAA;IACA,YAAA;IACA,wBAAA;IACA,wBAAA;IACA,gBAAA;CACA;AAEA;IACA,0BAAA;CACA;AAEA;IACA,oCAAA;YAAA,4BAAA;CACA;AAEA;IACA,oCAAA;IAEA,4BAAA;CACA;;AAEA,8BAAA;AACA;;IAEA,cAAA;CACA;AAEA;;IAEA,aAAA;IACA,mBAAA;IACA,wCAAA;YAAA,gCAAA;IACA,SAAA;CACA;AAEA;;IAEA,UAAA;CACA;AAEA;;IAEA,UAAA;CACA;AAEA;CACA,eAAA;CAAA;AAEA;CACA,cAAA;CAAA;;AAEA,0BAAA;;AAEA,qBAAA;AACA;IACA,oBAAA;CACA;AAEA;IACA,mBAAA;CACA\",\"file\":\"View.vue\",\"sourcesContent\":[\"<template>\\n    <div>\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <a class=\\\"text-success\\\" href=\\\"\\\" @click.prevent=\\\"viewUnitOfMeasurements\\\">Unit of Measurements</a>\\n                <a class=\\\"text-secondary\\\"> / View Unit of Measurement</a>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <div v-if=\\\"ifReady\\\">\\n                    <fieldset disabled>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"name\\\">Name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" v-model=\\\"unit_of_measurements.name\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"name\\\">Abbreviation</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" v-model=\\\"unit_of_measurements.abbreviation\\\">\\n                        </div>\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-6 form-group\\\">\\n                                <label>Default</label><br />\\n                                <label class=\\\"switch\\\">\\n                                    <input type=\\\"checkbox\\\" v-model=\\\"defaultValue\\\" disabled/>\\n                                    <span class=\\\"slider round\\\">\\n                                        <span class=\\\"on\\\">{{'Yes'}}</span>\\n                                        <span class=\\\"off\\\">{{'No'}}</span>\\n                                    </span>\\n                                </label>\\n                            </div>\\n                        </div>\\n\\n                    </fieldset>\\n\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-success btn-sm\\\" @click.prevent.default=\\\"viewUnitOfMeasurements\\\"><i class=\\\"fas fa-chevron-left\\\"></i> Back</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" @click.prevent.default=\\\"editUnitOfMeasurements\\\"><i class=\\\"fas fa-edit\\\"></i>  Edit UOM</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" @click.prevent.default=\\\"openDeleteUnitOfMeasurementModal\\\"><i class=\\\"fas fa-trash-alt\\\"></i> Delete UOM</button>\\n                </div>\\n                <div v-else>\\n                    <div class=\\\"progress\\\">\\n                        <div class=\\\"progress-bar progress-bar-striped progress-bar-animated\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"100\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 100%;\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!-- Modal -->\\n        <div class=\\\"modal fade\\\" id=\\\"deleteUnitOfMeasurementModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deleteUnitOfMeasurementTitle\\\" aria-hidden=\\\"true\\\">\\n            <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n                <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">You're about to delete this UOM?</h5>\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        Are you sure you want to delete this UOM? <br><br>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" @click.prevent.default=\\\"deleteCorporation\\\">Confirm Delete</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</template>\\n\\n<script>\\n    export default {\\n        data() {\\n            return {\\n                componentVal: 'UOM',\\n                ifReady: false,\\n                unit_of_measurements: '',\\n                defaultValue: null\\n            };\\n        },\\n\\n        mounted() {\\n            let promise = new Promise((resolve, reject) => {\\n                axios.get('/api/unit-of-measurements/' + this.$route.params.id).then(res => {\\n                    console.log(res)\\n                    this.unit_of_measurements = res.data.unitOfMeasurement;\\n                    if (this.unit_of_measurements.default_value == 'yes') {\\n                        this.defaultValue = true;\\n                    } else {\\n                        this.defaultValue = false;\\n                    }\\n                    resolve();\\n                });\\n            });\\n\\n            promise.then(() => {\\n                this.ifReady = true;\\n            });\\n        },\\n\\n        methods: {         \\n            viewUnitOfMeasurements() {\\n                this.$router.push({\\n                    name: 'unit-of-measurements.index'\\n                });\\n            },\\n            editUnitOfMeasurements() {\\n                this.$router.push({\\n                    name: 'unit-of-measurements.edit',\\n                    params: { id: this.unit_of_measurements.id }\\n                });\\n            },\\n            openDeleteUnitOfMeasurementModal() {\\n                $('#deleteUnitOfMeasurementModal').modal('show');\\n            },\\n            deleteCorporation() {\\n                $('#deleteUnitOfMeasurementModal').modal('hide');\\n\\n                axios.delete('/api/unit-of-measurements/' + this.$route.params.id).then(res => {\\n                    this.$router.push({ name: 'unit-of-measurements.index' });\\n                }).catch(err => {\\n                    alert(\\\"Error!\\\");\\n                    console.log(err);\\n                });\\n            }\\n        }\\n    }\\n</script>\\n<style>\\n    .dateStyle input:read-only {\\n        background-color: #ffffff !important;\\n    }\\n\\n    .switch {\\n        position: relative;\\n        display: inline-block;\\n        width: 90px;\\n        height: 34px;\\n    }\\n  \\n    .switch input {display:none;}\\n    \\n    .slider {\\n        position: absolute;\\n        cursor: pointer;\\n        top: 0;\\n        left: 0;\\n        right: 0;\\n        bottom: 0;\\n        background-color: #8E8E8E;\\n        -webkit-transition: .4s;\\n        transition: .4s;\\n    }\\n    \\n    .slider:before {\\n        position: absolute;\\n        content: \\\"\\\";\\n        height: 26px;\\n        width: 26px;\\n        left: 4px;\\n        bottom: 4px;\\n        background-color: white;\\n        -webkit-transition: .4s;\\n        transition: .4s;\\n    }\\n    \\n    input:checked + .slider {\\n        background-color: #0CC27E;\\n    }\\n    \\n    input:focus + .slider {\\n        box-shadow: 0 0 1px #2196F3;\\n    }\\n    \\n    input:checked + .slider:before {\\n        -webkit-transform: translateX(55px);\\n        -ms-transform: translateX(55px);\\n        transform: translateX(55px);\\n    }\\n    \\n    /*------ ADDED CSS ---------*/\\n    .on\\n    {\\n        display: none;\\n    }\\n    \\n    .on, .off\\n    {\\n        color: white;\\n        position: absolute;\\n        transform: translate(-50%,-50%);\\n        top: 50%;\\n    }\\n    \\n    .on \\n    {\\n        left: 45%;\\n    }\\n    \\n    .off \\n    {\\n        left: 55%;\\n    }\\n    \\n    input:checked+ .slider .on\\n    {display: block;}\\n    \\n    input:checked + .slider .off\\n    {display: none;}\\n    \\n    /*--------- END --------*/\\n    \\n    /* Rounded sliders */\\n    .slider.round {\\n        border-radius: 34px;\\n    }\\n    \\n    .slider.round:before {\\n        border-radius: 50%;\\n    }\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///587\n");

/***/ }),

/***/ 588:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  data: function data() {\n    return {\n      componentVal: 'UOM',\n      ifReady: false,\n      unit_of_measurements: '',\n      defaultValue: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var promise = new Promise(function (resolve, reject) {\n      axios.get('/api/unit-of-measurements/' + _this.$route.params.id).then(function (res) {\n        console.log(res);\n        _this.unit_of_measurements = res.data.unitOfMeasurement;\n\n        if (_this.unit_of_measurements.default_value == 'yes') {\n          _this.defaultValue = true;\n        } else {\n          _this.defaultValue = false;\n        }\n\n        resolve();\n      });\n    });\n    promise.then(function () {\n      _this.ifReady = true;\n    });\n  },\n  methods: {\n    viewUnitOfMeasurements: function viewUnitOfMeasurements() {\n      this.$router.push({\n        name: 'unit-of-measurements.index'\n      });\n    },\n    editUnitOfMeasurements: function editUnitOfMeasurements() {\n      this.$router.push({\n        name: 'unit-of-measurements.edit',\n        params: {\n          id: this.unit_of_measurements.id\n        }\n      });\n    },\n    openDeleteUnitOfMeasurementModal: function openDeleteUnitOfMeasurementModal() {\n      $('#deleteUnitOfMeasurementModal').modal('show');\n    },\n    deleteCorporation: function deleteCorporation() {\n      var _this2 = this;\n\n      $('#deleteUnitOfMeasurementModal').modal('hide');\n      axios.delete('/api/unit-of-measurements/' + this.$route.params.id).then(function (res) {\n        _this2.$router.push({\n          name: 'unit-of-measurements.index'\n        });\n      }).catch(function (err) {\n        alert(\"Error!\");\n        console.log(err);\n      });\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///588\n");

/***/ }),

/***/ 589:
/***/ (function(module, exports, __webpack_require__) {

eval("var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"card\" }, [\n      _c(\"div\", { staticClass: \"card-header\" }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"text-success\",\n            attrs: { href: \"\" },\n            on: {\n              click: function($event) {\n                $event.preventDefault()\n                return _vm.viewUnitOfMeasurements($event)\n              }\n            }\n          },\n          [_vm._v(\"Unit of Measurements\")]\n        ),\n        _vm._v(\" \"),\n        _c(\"a\", { staticClass: \"text-secondary\" }, [\n          _vm._v(\" / View Unit of Measurement\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"card-body\" }, [\n        _vm.ifReady\n          ? _c(\"div\", [\n              _c(\"fieldset\", { attrs: { disabled: \"\" } }, [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\"label\", { attrs: { for: \"name\" } }, [_vm._v(\"Name\")]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.unit_of_measurements.name,\n                        expression: \"unit_of_measurements.name\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: { type: \"text\" },\n                    domProps: { value: _vm.unit_of_measurements.name },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.unit_of_measurements,\n                          \"name\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  })\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\"label\", { attrs: { for: \"name\" } }, [\n                    _vm._v(\"Abbreviation\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.unit_of_measurements.abbreviation,\n                        expression: \"unit_of_measurements.abbreviation\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: { type: \"text\" },\n                    domProps: { value: _vm.unit_of_measurements.abbreviation },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.unit_of_measurements,\n                          \"abbreviation\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  })\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\"div\", { staticClass: \"col-md-6 form-group\" }, [\n                    _c(\"label\", [_vm._v(\"Default\")]),\n                    _c(\"br\"),\n                    _vm._v(\" \"),\n                    _c(\"label\", { staticClass: \"switch\" }, [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.defaultValue,\n                            expression: \"defaultValue\"\n                          }\n                        ],\n                        attrs: { type: \"checkbox\", disabled: \"\" },\n                        domProps: {\n                          checked: Array.isArray(_vm.defaultValue)\n                            ? _vm._i(_vm.defaultValue, null) > -1\n                            : _vm.defaultValue\n                        },\n                        on: {\n                          change: function($event) {\n                            var $$a = _vm.defaultValue,\n                              $$el = $event.target,\n                              $$c = $$el.checked ? true : false\n                            if (Array.isArray($$a)) {\n                              var $$v = null,\n                                $$i = _vm._i($$a, $$v)\n                              if ($$el.checked) {\n                                $$i < 0 &&\n                                  (_vm.defaultValue = $$a.concat([$$v]))\n                              } else {\n                                $$i > -1 &&\n                                  (_vm.defaultValue = $$a\n                                    .slice(0, $$i)\n                                    .concat($$a.slice($$i + 1)))\n                              }\n                            } else {\n                              _vm.defaultValue = $$c\n                            }\n                          }\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"slider round\" }, [\n                        _c(\"span\", { staticClass: \"on\" }, [\n                          _vm._v(_vm._s(\"Yes\"))\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"off\" }, [\n                          _vm._v(_vm._s(\"No\"))\n                        ])\n                      ])\n                    ])\n                  ])\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-outline-success btn-sm\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function($event) {\n                      if (\n                        !(\"button\" in $event) &&\n                        _vm._k(\n                          $event.keyCode,\n                          \"default\",\n                          undefined,\n                          $event.key,\n                          undefined\n                        )\n                      ) {\n                        return null\n                      }\n                      $event.preventDefault()\n                      return _vm.viewUnitOfMeasurements($event)\n                    }\n                  }\n                },\n                [\n                  _c(\"i\", { staticClass: \"fas fa-chevron-left\" }),\n                  _vm._v(\" Back\")\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-primary btn-sm\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function($event) {\n                      if (\n                        !(\"button\" in $event) &&\n                        _vm._k(\n                          $event.keyCode,\n                          \"default\",\n                          undefined,\n                          $event.key,\n                          undefined\n                        )\n                      ) {\n                        return null\n                      }\n                      $event.preventDefault()\n                      return _vm.editUnitOfMeasurements($event)\n                    }\n                  }\n                },\n                [_c(\"i\", { staticClass: \"fas fa-edit\" }), _vm._v(\"  Edit UOM\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-danger btn-sm\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function($event) {\n                      if (\n                        !(\"button\" in $event) &&\n                        _vm._k(\n                          $event.keyCode,\n                          \"default\",\n                          undefined,\n                          $event.key,\n                          undefined\n                        )\n                      ) {\n                        return null\n                      }\n                      $event.preventDefault()\n                      return _vm.openDeleteUnitOfMeasurementModal($event)\n                    }\n                  }\n                },\n                [\n                  _c(\"i\", { staticClass: \"fas fa-trash-alt\" }),\n                  _vm._v(\" Delete UOM\")\n                ]\n              )\n            ])\n          : _c(\"div\", [_vm._m(0)])\n      ])\n    ]),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      {\n        staticClass: \"modal fade\",\n        attrs: {\n          id: \"deleteUnitOfMeasurementModal\",\n          tabindex: \"-1\",\n          role: \"dialog\",\n          \"aria-labelledby\": \"deleteUnitOfMeasurementTitle\",\n          \"aria-hidden\": \"true\"\n        }\n      },\n      [\n        _c(\n          \"div\",\n          {\n            staticClass: \"modal-dialog modal-dialog-centered\",\n            attrs: { role: \"document\" }\n          },\n          [\n            _c(\"div\", { staticClass: \"modal-content\" }, [\n              _vm._m(1),\n              _vm._v(\" \"),\n              _vm._m(2),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"modal-footer\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-danger btn-sm\",\n                    attrs: { type: \"button\" },\n                    on: {\n                      click: function($event) {\n                        if (\n                          !(\"button\" in $event) &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"default\",\n                            undefined,\n                            $event.key,\n                            undefined\n                          )\n                        ) {\n                          return null\n                        }\n                        $event.preventDefault()\n                        return _vm.deleteCorporation($event)\n                      }\n                    }\n                  },\n                  [_vm._v(\"Confirm Delete\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-secondary btn-sm\",\n                    attrs: { type: \"button\", \"data-dismiss\": \"modal\" }\n                  },\n                  [_vm._v(\"Close\")]\n                )\n              ])\n            ])\n          ]\n        )\n      ]\n    )\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"progress\" }, [\n      _c(\"div\", {\n        staticClass: \"progress-bar progress-bar-striped progress-bar-animated\",\n        staticStyle: { width: \"100%\" },\n        attrs: {\n          role: \"progressbar\",\n          \"aria-valuenow\": \"100\",\n          \"aria-valuemin\": \"0\",\n          \"aria-valuemax\": \"100\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"modal-header\" }, [\n      _c(\n        \"h5\",\n        { staticClass: \"modal-title\", attrs: { id: \"exampleModalLongTitle\" } },\n        [_vm._v(\"You're about to delete this UOM?\")]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"button\",\n        {\n          staticClass: \"close\",\n          attrs: {\n            type: \"button\",\n            \"data-dismiss\": \"modal\",\n            \"aria-label\": \"Close\"\n          }\n        },\n        [_c(\"span\", { attrs: { \"aria-hidden\": \"true\" } }, [_vm._v(\"×\")])]\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"modal-body\" }, [\n      _vm._v(\n        \"\\n                    Are you sure you want to delete this UOM? \"\n      ),\n      _c(\"br\"),\n      _c(\"br\")\n    ])\n  }\n]\nrender._withStripped = true\nmodule.exports = { render: render, staticRenderFns: staticRenderFns }\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-864bb83e\", module.exports)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///589\n");

/***/ })

});