webpackJsonp([3],{

/***/ 249:
/***/ (function(module, exports, __webpack_require__) {

eval("var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  __webpack_require__(341)\n}\nvar normalizeComponent = __webpack_require__(13)\n/* script */\nvar __vue_script__ = __webpack_require__(343)\n/* template */\nvar __vue_template__ = __webpack_require__(344)\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"resources/js/views/Overview.vue\"\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-1d78e5d0\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-1d78e5d0\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvdmlld3MvT3ZlcnZpZXcudnVlP2I2MmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsRUFBRSxtQkFBTyxDQUFDLEdBQXdRO0FBQ2xSO0FBQ0EseUJBQXlCLG1CQUFPLENBQUMsRUFBNEQ7QUFDN0Y7QUFDQSxxQkFBcUIsbUJBQU8sQ0FBQyxHQUFxVztBQUNsWTtBQUNBLHVCQUF1QixtQkFBTyxDQUFDLEdBQWtPO0FBQ2pRO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxJQUFJLEtBQVUsR0FBRztBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQzs7QUFFRCIsImZpbGUiOiIyNDkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZGlzcG9zZWQgPSBmYWxzZVxuZnVuY3Rpb24gaW5qZWN0U3R5bGUgKHNzckNvbnRleHQpIHtcbiAgaWYgKGRpc3Bvc2VkKSByZXR1cm5cbiAgcmVxdWlyZShcIiEhdnVlLXN0eWxlLWxvYWRlciFjc3MtbG9hZGVyP3NvdXJjZU1hcCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXg/e1xcXCJ2dWVcXFwiOnRydWUsXFxcImlkXFxcIjpcXFwiZGF0YS12LTFkNzhlNWQwXFxcIixcXFwic2NvcGVkXFxcIjpmYWxzZSxcXFwiaGFzSW5saW5lQ29uZmlnXFxcIjp0cnVlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL092ZXJ2aWV3LnZ1ZVwiKVxufVxudmFyIG5vcm1hbGl6ZUNvbXBvbmVudCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2NvbXBvbmVudC1ub3JtYWxpemVyXCIpXG4vKiBzY3JpcHQgKi9cbnZhciBfX3Z1ZV9zY3JpcHRfXyA9IHJlcXVpcmUoXCIhIWJhYmVsLWxvYWRlcj97XFxcImNhY2hlRGlyZWN0b3J5XFxcIjp0cnVlLFxcXCJwcmVzZXRzXFxcIjpbW1xcXCJlbnZcXFwiLHtcXFwibW9kdWxlc1xcXCI6ZmFsc2UsXFxcInRhcmdldHNcXFwiOntcXFwiYnJvd3NlcnNcXFwiOltcXFwiPiAyJVxcXCJdLFxcXCJ1Z2xpZnlcXFwiOnRydWV9fV1dLFxcXCJwbHVnaW5zXFxcIjpbXFxcInRyYW5zZm9ybS1vYmplY3QtcmVzdC1zcHJlYWRcXFwiLFtcXFwidHJhbnNmb3JtLXJ1bnRpbWVcXFwiLHtcXFwicG9seWZpbGxcXFwiOmZhbHNlLFxcXCJoZWxwZXJzXFxcIjpmYWxzZX1dLFxcXCJzeW50YXgtZHluYW1pYy1pbXBvcnRcXFwiXX0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9PdmVydmlldy52dWVcIilcbi8qIHRlbXBsYXRlICovXG52YXIgX192dWVfdGVtcGxhdGVfXyA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleD97XFxcImlkXFxcIjpcXFwiZGF0YS12LTFkNzhlNWQwXFxcIixcXFwiaGFzU2NvcGVkXFxcIjpmYWxzZSxcXFwiYnVibGVcXFwiOntcXFwidHJhbnNmb3Jtc1xcXCI6e319fSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vT3ZlcnZpZXcudnVlXCIpXG4vKiB0ZW1wbGF0ZSBmdW5jdGlvbmFsICovXG52YXIgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fID0gZmFsc2Vcbi8qIHN0eWxlcyAqL1xudmFyIF9fdnVlX3N0eWxlc19fID0gaW5qZWN0U3R5bGVcbi8qIHNjb3BlSWQgKi9cbnZhciBfX3Z1ZV9zY29wZUlkX18gPSBudWxsXG4vKiBtb2R1bGVJZGVudGlmaWVyIChzZXJ2ZXIgb25seSkgKi9cbnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fID0gbnVsbFxudmFyIENvbXBvbmVudCA9IG5vcm1hbGl6ZUNvbXBvbmVudChcbiAgX192dWVfc2NyaXB0X18sXG4gIF9fdnVlX3RlbXBsYXRlX18sXG4gIF9fdnVlX3RlbXBsYXRlX2Z1bmN0aW9uYWxfXyxcbiAgX192dWVfc3R5bGVzX18sXG4gIF9fdnVlX3Njb3BlSWRfXyxcbiAgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfX1xuKVxuQ29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJyZXNvdXJjZXMvanMvdmlld3MvT3ZlcnZpZXcudnVlXCJcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkge1xuICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCBmYWxzZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTFkNzhlNWQwXCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtMWQ3OGU1ZDBcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH1cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgZGlzcG9zZWQgPSB0cnVlXG4gIH0pXG59KSgpfVxuXG5tb2R1bGUuZXhwb3J0cyA9IENvbXBvbmVudC5leHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3Jlc291cmNlcy9qcy92aWV3cy9PdmVydmlldy52dWVcbi8vIG1vZHVsZSBpZCA9IDI0OVxuLy8gbW9kdWxlIGNodW5rcyA9IDMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///249\n");

/***/ }),

/***/ 341:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(342);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(15)(\"bbb7660a\", content, false, {});\n// Hot Module Replacement\nif(false) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1d78e5d0\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Overview.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1d78e5d0\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Overview.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvdmlld3MvT3ZlcnZpZXcudnVlPzg3Y2MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQSxjQUFjLG1CQUFPLENBQUMsR0FBNFI7QUFDbFQsNENBQTRDLFFBQVM7QUFDckQ7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxFQUFnRSxnQ0FBZ0M7QUFDckg7QUFDQSxHQUFHLEtBQVU7QUFDYjtBQUNBO0FBQ0EsMElBQTBJLGtGQUFrRjtBQUM1TixtSkFBbUosa0ZBQWtGO0FBQ3JPO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJmaWxlIjoiMzQxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXguanM/e1xcXCJ2dWVcXFwiOnRydWUsXFxcImlkXFxcIjpcXFwiZGF0YS12LTFkNzhlNWQwXFxcIixcXFwic2NvcGVkXFxcIjpmYWxzZSxcXFwiaGFzSW5saW5lQ29uZmlnXFxcIjp0cnVlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL092ZXJ2aWV3LnZ1ZVwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpKFwiYmJiNzY2MGFcIiwgY29udGVudCwgZmFsc2UsIHt9KTtcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcbiAvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuIGlmKCFjb250ZW50LmxvY2Fscykge1xuICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXguanM/e1xcXCJ2dWVcXFwiOnRydWUsXFxcImlkXFxcIjpcXFwiZGF0YS12LTFkNzhlNWQwXFxcIixcXFwic2NvcGVkXFxcIjpmYWxzZSxcXFwiaGFzSW5saW5lQ29uZmlnXFxcIjp0cnVlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL092ZXJ2aWV3LnZ1ZVwiLCBmdW5jdGlvbigpIHtcbiAgICAgdmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi0xZDc4ZTVkMFxcXCIsXFxcInNjb3BlZFxcXCI6ZmFsc2UsXFxcImhhc0lubGluZUNvbmZpZ1xcXCI6dHJ1ZX0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9PdmVydmlldy52dWVcIik7XG4gICAgIGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuICAgICB1cGRhdGUobmV3Q29udGVudCk7XG4gICB9KTtcbiB9XG4gLy8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIhLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj9zb3VyY2VNYXAhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXI/e1widnVlXCI6dHJ1ZSxcImlkXCI6XCJkYXRhLXYtMWQ3OGU1ZDBcIixcInNjb3BlZFwiOmZhbHNlLFwiaGFzSW5saW5lQ29uZmlnXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL3Jlc291cmNlcy9qcy92aWV3cy9PdmVydmlldy52dWVcbi8vIG1vZHVsZSBpZCA9IDM0MVxuLy8gbW9kdWxlIGNodW5rcyA9IDMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///341\n");

/***/ }),

/***/ 342:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(14)(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.center {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n}\\n.card-min {\\n    min-height: 200px;\\n}\\n.card-mod{\\n    padding-top:10px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"C:/laragon/www/inventory/resources/js/views/resources/js/views/Overview.vue\"],\"names\":[],\"mappings\":\";AA4zBA;IACA,qBAAA;IAAA,qBAAA;IAAA,cAAA;IACA,yBAAA;QAAA,sBAAA;YAAA,wBAAA;IACA,0BAAA;QAAA,uBAAA;YAAA,oBAAA;CACA;AACA;IACA,kBAAA;CACA;AACA;IACA,iBAAA;CACA\",\"file\":\"Overview.vue\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"mx-md-4 px-0\\\">\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 my-3\\\">\\n                    <span class=\\\"h3\\\">Dashboard</span>\\n                </div>\\n            </div>\\n\\n            <!-- Sales Report by Branch -->\\n            <!-- <div class=\\\"row\\\">\\n\\n                <div class=\\\"col-5 pr-0\\\">\\n                    <span class=\\\"chart-1\\\">\\n                        <div class=\\\"card card-min\\\">\\n                            <div class=\\\"card-body card-mod\\\">\\n                                <canvas id=\\\"sales-report-branch\\\" class=\\\"chart\\\"></canvas>\\n                            </div>\\n                            <div class=\\\"card-footer\\\">\\n                                <small class=\\\"text-muted\\\">Sales by Branch</small>\\n                            </div>\\n                        </div>\\n                    </span>\\n                </div>\\n\\n                <div class=\\\"col-7\\\">\\n                    <div class=\\\"card card-min\\\">\\n                        <div class=\\\"card-body card-mod\\\">\\n                            <vue-select v-model=\\\"selectedBranchWeek\\\" placeholder=\\\"Select a Branch\\\" @input=\\\"changeBranchWeek()\\\" label=\\\"Select Week\\\" :options=\\\"options\\\"></vue-select>\\n                            <table class=\\\"table table-hover table-sm mt-1\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th scope=\\\"col\\\">Branch</th>\\n                                        <th scope=\\\"col\\\">Amount</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody class=\\\"\\\">\\n                                    <tr>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div> -->\\n\\n            <!-- Sales Report by Type -->\\n            <!-- <div class=\\\"row mt-3\\\">\\n                <div class=\\\"col-5 pr-0\\\">\\n                    <span class=\\\"chart-1\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-body\\\">\\n                                <canvas id=\\\"sales-report-type\\\" class=\\\"chart\\\"></canvas>\\n                            </div>\\n                            <div class=\\\"card-footer\\\">\\n                                <small class=\\\"text-muted\\\">Sales by Type</small>\\n                            </div>\\n                        </div>\\n                    </span>\\n                </div>\\n\\n                <div class=\\\"col-7\\\">\\n                    <div class=\\\"card card-min\\\">\\n                        <div class=\\\"card-body card-mod\\\">\\n                            <vue-select v-model=\\\"selectedTypeWeek\\\" placeholder=\\\"Select a Type\\\" @input=\\\"changeTypeWeek()\\\"  :options=\\\"options\\\"></vue-select>\\n                            <table class=\\\"table table-hover table-sm mt-1\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th scope=\\\"col\\\">Week</th>\\n                                        <th scope=\\\"col\\\">Amount</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody class=\\\"\\\">\\n                                     <tr v-bind:key=\\\"index\\\" v-for=\\\"(data, index) in this.salesTypeTableData\\\">\\n                                        <td>Week No. {{index + 1}}</td>\\n                                        <td>{{data.val}}</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div> -->\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-8 col-sm-6 pr-0\\\">\\n\\n                    <!-- Main Content Grid -->\\n                    <div class=\\\"grid\\\">\\n\\n                        <div class=\\\"row mt-3\\\">\\n                            <!-- Quotations for Approval -->\\n                            <div class=\\\"col-6 pr-0\\\">\\n                                <div class=\\\"card\\\">\\n                                    <div class=\\\"card-header\\\">\\n                                        <span class=\\\"subcontent-header\\\"> <strong>Quotations for Approval</strong></span>\\n                                    </div>\\n                                    <span v-if=\\\"this.quotationsForApproval && this.quotationsForApproval.length > 0\\\">\\n                                        <ul class=\\\"list-group list-group-flush\\\" :key=\\\"quote.id\\\" v-for=\\\"quote in this.quotationsForApproval\\\">\\n                                            <li class=\\\"list-group-item\\\">\\n                                            <router-link :to=\\\"{ name: 'quotations.view', params: { id: quote.id } }\\\">{{quote.number}}</router-link>\\n                                            </li>\\n                                        </ul>\\n                                    </span>\\n                                    <span v-else>\\n                                        <ul class=\\\"list-group list-group-flush\\\">\\n                                            <li class=\\\"list-group-item\\\">No Pending Quotation</li>\\n                                        </ul>\\n                                    </span>\\n                                </div>\\n                            </div>\\n\\n                            <!-- Stock Request for Approval -->\\n                            <div class=\\\"col-6\\\">\\n                                <div class=\\\"card\\\">\\n                                    <div class=\\\"card-header\\\">\\n                                        <span class=\\\"subcontent-header\\\"> <strong>Stock Requests for Approval</strong></span>\\n                                    </div>\\n                                    <span v-if=\\\"this.stockRequests && this.stockRequests.length > 0\\\">\\n                                        <ul class=\\\"list-group list-group-flush\\\" :key=\\\"stock.id\\\" v-for=\\\"stock in this.stockRequests\\\">\\n                                            <li class=\\\"list-group-item\\\">\\n                                                <router-link :to=\\\"{ name: 'stock-requests.view', params: { id: stock.id } }\\\">{{stock.number}}</router-link>\\n                                            </li>\\n                                        </ul>\\n                                    </span>\\n                                    <span v-else>\\n                                        <ul class=\\\"list-group list-group-flush\\\">\\n                                            <li class=\\\"list-group-item\\\">No Pending Stock Request</li>\\n                                        </ul>\\n                                    </span>\\n                                </div>\\n                            </div>\\n\\n                            <!-- Sales Report -->\\n                            <div class=\\\"col-6 mt-2 pr-0\\\">\\n                                <div class=\\\"card\\\">\\n                                    <div class=\\\"card-header\\\">\\n                                        <span class=\\\"subcontent-header\\\"> <strong>Stock Transfers for Approval</strong></span>\\n                                    </div>\\n                                    <span v-if=\\\"this.stockTransfers && this.stockTransfers.length > 0\\\">\\n                                        <ul class=\\\"list-group list-group-flush\\\" :key=\\\"stock.id\\\" v-for=\\\"stock in this.stockTransfers\\\">\\n                                            <li class=\\\"list-group-item\\\">\\n                                                <router-link :to=\\\"{ name: 'stock-transfers.view', params: { id: stock.id } }\\\">{{stock.number}}</router-link>\\n                                            </li>\\n                                        </ul>\\n                                    </span>\\n                                    <span v-else>\\n                                        <ul class=\\\"list-group list-group-flush\\\">\\n                                            <li class=\\\"list-group-item\\\">No Pendting Stock Transfer</li>\\n                                        </ul>\\n                                    </span>\\n                                </div>\\n                            </div>\\n\\n                            <!-- Purchase Orders -->\\n                            <div class=\\\"col-6 mt-2\\\">\\n                                <div class=\\\"card\\\">\\n                                    <div class=\\\"card-header\\\">\\n                                        <span class=\\\"subcontent-header\\\"> <strong>Purchase Orders for Approval</strong></span>\\n                                    </div>\\n                                    <span v-if=\\\"this.purchaseOrders && this.purchaseOrders.length > 0\\\">\\n                                        <ul class=\\\"list-group list-group-flush\\\" :key=\\\"po.id\\\" v-for=\\\"po in this.purchaseOrders\\\">\\n                                            <li class=\\\"list-group-item\\\">\\n                                                <router-link :to=\\\"{ name: 'purchase-orders.view', params: { id: po.id } }\\\">{{po.reference_number}}</router-link>\\n                                            </li>\\n                                        </ul>\\n                                    </span>\\n                                    <span v-else>\\n                                        <ul class=\\\"list-group list-group-flush\\\">\\n                                            <li class=\\\"list-group-item\\\">No Pending Order</li>\\n                                        </ul>\\n                                    </span>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <!-- PO, RO, Profit -->\\n                        <div class=\\\"row mt-3\\\">\\n                            <div class=\\\"col-12\\\">\\n                                <div class=\\\"row\\\">\\n\\n                                    <!-- Daily PO -->\\n                                    <div class=\\\"col-md-4 col-sm-12\\\">\\n                                        <div class=\\\"card card-min\\\">\\n                                            <div class=\\\"card-body row\\\">\\n                                                <div class=\\\"col-md-12 col-sm-12 text-center  center\\\">\\n                                                    <span class=\\\"display-4\\\">{{todaysPurchaseOrders.length}}</span>\\n                                                </div>\\n                                                <!-- <div class=\\\"col-md-7 col-sm-12 \\\">\\n                                                    <canvas id=\\\"chart2\\\" height=\\\"200\\\"></canvas>\\n                                                </div> -->\\n                                            </div>\\n                                            <div class=\\\"card-footer text-center\\\">\\n                                                <strong>\\n                                                    Today's Issued Purchase Order\\n                                                </strong>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n\\n                                    <!-- Daily RO -->\\n                                    <div class=\\\"col-md-4 col-sm-12\\\">\\n                                        <div class=\\\"card card-min\\\">\\n                                            <div class=\\\"card-body row\\\">\\n                                                <div class=\\\"col-md-12 col-sm-12 text-center  center\\\">\\n                                                    <span class=\\\"display-4\\\">{{todaysReceiveOrders.length}}</span>\\n                                                </div>\\n                                                <!-- <div class=\\\"col-md-7 col-sm-12 \\\">\\n                                                    <canvas id=\\\"chart3\\\" height=\\\"200\\\"></canvas>\\n                                                </div> -->\\n                                            </div>\\n                                            <div class=\\\"card-footer text-center\\\">\\n                                                <strong>\\n                                                Today's Issued Received Order\\n                                                </strong>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n\\n                                    <!-- Daily Income -->\\n                                    <div class=\\\"col-md-4 col-sm-12\\\">\\n                                        <div class=\\\"card card-min\\\">\\n                                            <div class=\\\"card-body row\\\">\\n                                                <div class=\\\"col-md-12 col-sm-12 text-center  center\\\">\\n                                                    <span class=\\\"display-4\\\">{{this.kFormatter(totalProfit)}}</span>\\n                                                </div>\\n                                                <!-- <div class=\\\"col-md-7 col-sm-12 \\\">\\n                                                    <canvas id=\\\"chart4\\\" height=\\\"200\\\"></canvas>\\n                                                </div> -->\\n                                            </div>\\n                                            <div class=\\\"card-footer text-center\\\">\\n                                                <strong>\\n                                                Today's Profit\\n                                                </strong>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <!-- Sales Chart, Purchase Order Comparison  -->\\n                        <div class=\\\"row mt-3\\\">\\n\\n                            <!-- Weekly, Daily or Monthly Sales Chart -->\\n                            <!-- <div class=\\\"col-6\\\">\\n                                <div class=\\\"p-1 mb-3\\\">\\n                                    <span class=\\\"h5\\\"> Sales Comparison </span>\\n                               </div>\\n                                <div class=\\\"card\\\">\\n                                    <div class=\\\"card-body\\\">\\n                                        <canvas id=\\\"chart5\\\" height=\\\"250\\\"></canvas>\\n                                    </div>\\n                                    <div class=\\\"card-footer\\\">\\n                                        <small class=\\\"text-muted\\\">Last updated 3 mins ago</small>\\n                                    </div>\\n                                </div>\\n                            </div> -->\\n\\n                            <!-- Weekly Purchase Order Comparison -->\\n                            <!-- <div class=\\\"col-6\\\">\\n                                <div class=\\\"p-1 mb-3\\\">\\n                                    <span class=\\\"h5\\\"> Purchase Comparison </span>\\n                                </div>\\n                                <div class=\\\"card\\\">\\n                                    <div class=\\\"card-body\\\">\\n                                        <canvas id=\\\"chart6\\\" height=\\\"250\\\"></canvas>\\n                                    </div>\\n                                    <div class=\\\"card-footer\\\">\\n                                        <small class=\\\"text-muted\\\">Last updated 3 mins ago</small>\\n                                    </div>\\n                                </div>\\n                            </div> -->\\n\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n                <!-- SubContent -->\\n                <div class=\\\"col-md-4 col-sm-6\\\">\\n\\n                    <!-- <div class=\\\"row mt-2\\\"> -->\\n                        <!-- Display Top 5 Latest P.O -->\\n                        <!-- <div class=\\\"col-12\\\">\\n                            <div class=\\\"card\\\">\\n                                <ul class=\\\"list-group list-group-flush\\\" :key=\\\"po.id\\\" v-for=\\\"po in this.purchaseOrders\\\">\\n                                    <li class=\\\"list-group-item\\\">\\n                                        test\\n                                    </li>\\n                                    <li class=\\\"list-group-item\\\">\\n                                        test\\n                                    </li>\\n                                    <li class=\\\"list-group-item\\\">\\n                                        test\\n                                    </li>\\n                                    <li class=\\\"list-group-item\\\">\\n                                        test\\n                                    </li>\\n                                    <li class=\\\"list-group-item\\\">\\n                                        test\\n                                    </li>\\n                                </ul>\\n                            </div>\\n                        </div> -->\\n                    <!-- </div> -->\\n\\n                    <div class=\\\"row mt-3\\\">\\n                        <!-- Display Top 5 Latest P.O -->\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-header\\\">\\n                                    <span class=\\\"subcontent-header\\\"><strong> Latest Purchase Orders </strong></span>\\n                                </div>\\n                                <span v-if=\\\"this.purchaseOrders && this.purchaseOrders.length > 0\\\">\\n                                    <ul class=\\\"list-group list-group-flush\\\" :key=\\\"po.id\\\" v-for=\\\"po in this.purchaseOrders\\\">\\n                                        <li class=\\\"list-group-item\\\">\\n                                            <router-link :to=\\\"{ name: 'purchase-orders.view', params: { id: po.id } }\\\">{{po.reference_number}}</router-link>\\n                                        </li>\\n                                    </ul>\\n                                </span>\\n                                <span v-else>\\n                                    <ul class=\\\"list-group list-group-flush\\\">\\n                                        <li class=\\\"list-group-item\\\">No Purchase Order Available</li>\\n                                    </ul>\\n                                </span>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row mt-2\\\">\\n                        <!-- Display Top 5 Latest P.O -->\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-header\\\">\\n                                    <span class=\\\"subcontent-header\\\"> <strong>Latest Quotations</strong></span>\\n                                </div>\\n                                <span v-if=\\\"this.quotations && this.quotations.length > 0\\\">\\n                                    <ul class=\\\"list-group list-group-flush\\\" :key=\\\"quote.id\\\" v-for=\\\"quote in this.quotations\\\">\\n                                        <li class=\\\"list-group-item\\\">\\n                                            <router-link :to=\\\"{ name: 'quotations.view', params: { id: quote.id } }\\\">{{quote.number}}</router-link>\\n                                        </li>\\n                                    </ul>\\n                                </span>\\n                                <span v-else>\\n                                    <ul class=\\\"list-group list-group-flush\\\">\\n                                        <li class=\\\"list-group-item\\\">No Quotations Available</li>\\n                                    </ul>\\n                                </span>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n</template>\\n\\n<script>\\n    const createBasicConfig = (type, labels, datasets, options) => {\\n        return {\\n            type: type,\\n            data: {\\n            labels: labels,\\n            datasets: datasets,\\n            },\\n            options: options,\\n        };\\n    };\\n\\n    const generateChart = ( chartElement, chartOptions ) => ( chartElement && chartOptions ) ? new Chart( chartElement, chartOptions) :  new Chart()\\n    const convertToDate = strDate => new Date(strDate).toDateString()\\n\\n    export default {\\n        data() {\\n            return {\\n                selectedBranchWeek:'',\\n                selectedTypeWeek:'',\\n                ifReady: false,\\n                chart: '',\\n                salesReportChart: '',\\n                todaysPurchaseOrderChart:'',\\n                todaysReceivedOrderChart:'',\\n                todaysProfitChart:'',\\n                salesComparisonChart:'',\\n                purchaseComparisonChart:'',\\n                dateToday: new Date(),\\n                quotations:[],\\n                quotationsForApproval:[],\\n                todaysQuotations:[],\\n                invoices:[],\\n                purchaseOrders:[],\\n                todaysPurchaseOrders:[],\\n                bills:[],\\n                todaysReceiveOrders:[],\\n                receiveOrder:[],\\n                todaysStockRequests:[],\\n                stockRequests:[],\\n                invoicePayment: '',\\n                stockRequest:[],\\n                stockTransfers:[],\\n                options: [],\\n                totalProfit:0,\\n                chartLabels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\\n                salesTypeTableData: [],\\n                salesTypeChartData: [\\n                    {\\n                        label: 'Foods',\\n                        data:  [\\n                                {\\n                                    val: 1\\n                                },\\n                                {\\n                                    val: 2\\n                                },\\n                                {\\n                                    val: 3\\n                                },\\n                                {\\n                                    val: 4\\n                                }\\n                            ],\\n                    },\\n                    {\\n                        label: 'Oats',\\n                        data:  [\\n                                {\\n                                    val: 5\\n                                },\\n                                {\\n                                    val: 10\\n                                },\\n                                {\\n                                    val: 30\\n                                },\\n                                {\\n                                    val: 40\\n                                }\\n                            ],\\n                    }\\n                ],\\n            };\\n        },\\n\\n        methods: {\\n            changeBranchWeek(){\\n                //console.log(this.selectedBranchWeek)\\n            },\\n            changeTypeWeek(){\\n                console.log(this.selectedTypeWeek)\\n                this.salesTypeChartData.map( (data, i) => {\\n                    if( data.label === this.selectedTypeWeek){\\n                        this.salesTypeTableData = this.salesTypeChartData[i].data\\n                    }\\n                })\\n            },\\n            kFormatter(num) {\\n                return num > 999 ? (num/1000).toFixed(1) + 'K' : num\\n            }\\n        },\\n        mounted () {\\n\\n             const weeks = [\\n               {\\n                   label: 'Drinks',\\n                   data:  [\\n                        {\\n                            val: 1\\n                        },\\n                        {\\n                            val: 2\\n                        },\\n                        {\\n                            val: 3\\n                        },\\n                        {\\n                            val: 4\\n                        }\\n                    ],\\n               }\\n            ]\\n            const createWeekData = ( weekArray) => {\\n                return weekArray.map( (week,i) => {\\n                    return {\\n                        label: week.label,\\n                        data: week.data.map( data => data.val),\\n                        backgroundColor: `rgba(54, 162, 235, ${week.shade})`,\\n                        borderColor: 'rgba(54, 162, 235, 1)',\\n                    }\\n                })\\n            }\\n\\n            const createTypeChartData = (weekdata) => {\\n                return weekdata.map( arr => {\\n                    return {\\n                        label: arr.label,\\n                        data: arr.data,\\n                        backgroundColor: `rgba(54, 162, 235, ${arr.percent})`,\\n                        borderColor: 'rgba(54, 162, 235, 1)',\\n                    }\\n                })\\n            }\\n\\n            const createOptions = ( weekArray ) => {\\n                return weekArray.map( data => data.label)\\n            }\\n\\n            this.salesTypeTableData = this.salesTypeChartData[0].data\\n            console.log(this.salesTypeTableData)\\n            this.options = createOptions( this.salesTypeChartData )\\n\\n            //console.clear();\\n            const getAllQuotations = () => {\\n                axios.get('/api/quotations/get-all-quotations').then( res => {\\n                    const allQuotations = res.data.quotations\\n                    console.groupCollapsed('Quotation Request')\\n\\n                    const log = JSON.stringify(allQuotations)\\n                    //console.log('All Quotation', JSON.parse(log));\\n\\n                    this.quotations = allQuotations ? allQuotations.sort((a,b)=>new Date(a.created_at)-new Date(b.created_at)) : []\\n\\n                    const issuedQuotations = this.quotationsForApproval = allQuotations.filter( quo => quo.status === 0)\\n\\n                    this.todaysQuotations = allQuotations\\n                    .filter( quo => (quo.status === 0) && ( new Date(quo.created_at).getDate() === this.dateToday.getDate() ))\\n\\n                    //console.log('Issued Quotations',issuedQuotations)\\n                    console.groupEnd()\\n\\n                }).catch( error => console.error(error))\\n            }\\n\\n            const getAllInvoices = () => {\\n                axios.get('/api/invoices/get-all-invoices').then( res => {\\n                    console.groupCollapsed('Invoice Request')\\n                        const allInvoices = res.data.invoices.sort((a,b)=>new Date(a.created_at)-new Date(b.created_at));\\n                        //console.log('All Invoices ->',allInvoices)\\n                    console.groupEnd()\\n                }).catch( error => console.error(error))\\n            }\\n\\n            const getTotalProfit = ( array ) =>{\\n                let tempAmount = 0\\n                if( array.reduce ){\\n                    const finalAmount =  array.reduce( (prev,curr) => {\\n                        let prevAmount = prev.amount ? prev.amount : 0\\n                        let currAmount = curr.amount ? curr.amount : 0\\n                        return parseInt(prevAmount) + parseInt(currAmount)\\n                    })\\n                }\\n                return finalAmount ? finalAmount: 0\\n            }\\n\\n            const getAllInvoicePayments = () => {\\n                axios.get('/api/invoice-payments/get-all-invoice-payments').then( res => {\\n                    console.groupCollapsed('Invoice Payments')\\n                        const allInvoices = res.data.invoice_payments\\n                        this.invoices = allInvoices ? allInvoices.sort((a,b)=>new Date(a.created_at)-new Date(b.created_at)) : []\\n                        //console.log('All Invoices ->',JSON.parse(JSON.stringify({res:allInvoices})))\\n\\n                        const testData = JSON.parse(JSON.stringify({res:allInvoices}))\\n\\n                        this.totalProfit = getTotalProfit(this.invoices)\\n                        //console.log('Total Profit ->', this.totalProfit)\\n                        this.total\\n\\n                        // Separate by Month\\n                        const monthData = testData.res.filter( data => new Date(data.created_at).getMonth() === new Date().getMonth() )\\n                        //console.log('Month Data ->', monthData)\\n\\n                        //Sort Month by first to last\\n                        const sortedMonthData = monthData.sort((a,b)=>new Date(a.created_at)-new Date(b.created_at));\\n\\n                        Date.prototype.getWeekNumber = function(){\\n                            var d = new Date(Date.UTC(this.getFullYear(), this.getMonth(), this.getDate()));\\n                            var dayNum = d.getUTCDay() || 7;\\n                            d.setUTCDate(d.getUTCDate() + 4 - dayNum);\\n                            var yearStart = new Date(Date.UTC(d.getUTCFullYear(),0,1));\\n                            return Math.ceil((((d - yearStart) / 86400000) + 1)/7)\\n                        };\\n\\n                        // Separate Month Data to Week Data\\n                        let weekData = [ [], [], [], []]\\n                        let tempData = []\\n\\n                        function weekOfMonth(m) {\\n                            return m.week() - moment(m).startOf('month').week() + 1;\\n                        }\\n\\n                        sortedMonthData.map( data => {\\n                            const weeknumber = weekOfMonth(moment(data.created_at))\\n                            weekData[weeknumber-1].push( data )\\n                        })\\n\\n\\n                        //console.log('Week Data ->', weekData)\\n\\n                    console.groupEnd()\\n                }).catch( error => console.error(error))\\n            }\\n\\n            const getAllPurchaseOrders = () => {\\n                axios.get('/api/purchase-orders/get-all-purchase-orders').then( res => {\\n                    console.groupCollapsed('Purchase Orders')\\n                        const allPurchaseOrders = res.data.purchase_orders\\n                        //console.log('All Purchase Orders ->',JSON.parse(JSON.stringify({res:res.data.purchase_orders})))\\n                        const issuedReceiveOrders = allPurchaseOrders.filter( data => data.status === 0)\\n                        //console.log('Issued Purchase Orders ->', allPurchaseOrders)\\n                        this.todaysPurchaseOrders = allPurchaseOrders.sort((a,b)=>new Date(a.created_at)-new Date(b.created_at));\\n                        this.purchaseOrders = this.todaysPurchaseOrders.filter( (val, i) => i < 10)\\n                    console.groupEnd()\\n                }).catch( error => console.error(error))\\n            }\\n\\n            const getAllReceiveOrder = () => {\\n                axios.get('/api/receive-orders/get-all-receive-orders').then( res => {\\n                    console.groupCollapsed('Receive Orders')\\n                        const allReceiveOrders = res.data.receive_orders\\n                        //console.log('All receive Orders ->', allReceiveOrders)\\n                        this.todaysReceiveOrders = allReceiveOrders ? allReceiveOrders.sort((a,b)=>new Date(a.created_at)-new Date(b.created_at)): []\\n                        this.purchaseOrders = this.todaysPurchaseOrders.filter( (val, i) => i < 10)\\n                    console.groupEnd()\\n                }).catch( error => console.error(error))\\n            }\\n\\n            const getAllStockTransfer = () => {\\n                axios.get('/api/stock-transfers/get-all-stock-transfers').then( res => {\\n                    //console.group('Stock Transfer')\\n                        const allStockTransfer = res.data.stock_transfers\\n                        //console.log('All Stock Transfers ->',JSON.parse(JSON.stringify({res:allStockTransfer})))\\n                        const stockTransferApproval = allStockTransfer.filter( data => data.status === 0)\\n                        this.stockTransfers = stockTransferApproval ? stockTransferApproval.sort((a,b)=>new Date(a.created_at)-new Date(b.created_at)): []\\n                    console.groupEnd()\\n                }).catch( error => console.error(error))\\n            }\\n\\n            const getAllStockRequest = () => {\\n                axios.get('/api/stock-requests/get-all-unapproved-stock-requests').then( res => {\\n                    console.groupCollapsed('Stock Requests')\\n                        const allStockRequests = res.data.stock_requests\\n                        const log =  JSON.stringify( {stock_request: allStockRequests})\\n                        //console.log('All Stock Requests ->',JSON.parse(log))\\n                        this.stockRequests = allStockRequests ? allStockRequests.sort((a,b)=>new Date(a.created_at)-new Date(b.created_at)) : []\\n                    console.groupEnd()\\n                }).catch( error => console.error(error))\\n            }\\n\\n            const getAllBills = () => {\\n                axios.get('/api/bill-payments/get-all-bill-payments').then( res => {\\n                    console.groupCollapsed('Bills Payment')\\n                        const allBills = {bills: res.data.bills_payments}\\n                        const log =  JSON.stringify(allBills)\\n                        //console.log('All Bills ->',JSON.parse(log))\\n                        // this.bills = allBills.sort((a,b)=>new Date(a.created_at)-new Date(b.created_at));\\n                    console.groupEnd()\\n                }).catch( error => console.error(error))\\n            }\\n\\n            getAllQuotations()\\n            getAllInvoices()\\n            getAllPurchaseOrders()\\n            getAllBills()\\n            getAllReceiveOrder()\\n            getAllInvoicePayments()\\n            getAllStockRequest()\\n            getAllStockTransfer()\\n\\n            //console.log('Data Today ->', this.dateToday)\\n\\n            if (this.$store.state.corporation_id == null || undefined ) {\\n                this.$router.push({ name: 'corporations.select' })\\n            }\\n\\n            const salesBranchOptions = createBasicConfig(\\n            'bar',\\n            this.chartLabels,\\n            createWeekData(weeks), {\\n                scales: {\\n                yAxes: [\\n                    {\\n                        ticks: {\\n                            beginAtZero: true,\\n                        },\\n                    },\\n                ],\\n                },\\n            })\\n            const salesTypeOptions = createBasicConfig(\\n            'bar',\\n            this.chartLabels,\\n            createWeekData(this.salesTypeChartData), {\\n                scales: {\\n                yAxes: [\\n                    {\\n                        ticks: {\\n                            beginAtZero: true,\\n                        },\\n                    },\\n                ],\\n                },\\n            })\\n            generateChart('sales-report-branch', salesBranchOptions)\\n            generateChart('sales-report-type', salesTypeOptions)\\n\\n\\n\\n            let promise = new Promise((resolve, reject) => {\\n                axios.get('/api/statistics/test-payload').then(res => {\\n                    const response = res.data.payload\\n                    const labels = response.map( data => convertToDate(data.date))\\n                    const data = response.map( data => data.data)\\n                    const options = createBasicConfig( 'bar', labels,\\n                    [\\n                        {\\n                            label: 'Sales',\\n                            data: data,\\n                            backgroundColor: 'rgba(54, 162, 235, 0.6)',\\n                            borderColor: 'rgba(54, 162, 235, 1)',\\n                            borderWidth: 2,\\n                            pointRadius: 0,\\n                            lineTension: 0,\\n                        },\\n                    ],\\n                    {\\n                        scales: {\\n                            yAxes: [\\n                                {\\n                                    ticks: {\\n                                        beginAtZero: true,\\n                                    },\\n                                },\\n                            ],\\n                        },\\n                    })\\n\\n                    const options2 = createBasicConfig( 'line', labels,\\n                    [\\n                        {\\n                            data: data,\\n                            backgroundColor: 'rgba(54, 162, 235, 0.6)',\\n                            borderColor: 'rgba(54, 162, 235, 1)',\\n                            borderWidth: 2,\\n                            pointRadius: 0,\\n                            lineTension: 0,\\n                            fill: false,\\n                        },\\n                    ],\\n                    {\\n                        legend: {\\n                                display: false,\\n                        },\\n                        scales: {\\n                            yAxes: [\\n                                {\\n                                    display: false,\\n                                    gridLines: {\\n                                    display: false,\\n                                    },\\n                                    ticks: {\\n                                    beginAtZero: true,\\n                                    },\\n                                },\\n                            ],\\n                            xAxes: [\\n                                {\\n                                    display: false,\\n                                }\\n                            ],\\n                        },\\n                    })\\n\\n                    let chartSampleLabel = ['Week 1', 'Week 2', 'Week 3', 'Week 4'];\\n                    let chartSampleData = [\\n                        {\\n                            label: 'Type 1',\\n                            data: [3, 7, 4, 6],\\n                            backgroundColor: 'rgba(54, 162, 235, 0.3)',\\n                            borderColor: 'rgba(54, 162, 235, 1)',\\n                        },\\n                        {\\n                            label: 'Type 2',\\n                            data: [4, 3, 5, 7],\\n                            backgroundColor: 'rgba(54, 162, 235, 0.5)',\\n                            borderColor: 'rgba(54, 162, 235, 1)',\\n                        },\\n                        {\\n                            label: 'Type 3',\\n                            data: [7, 2, 6, 9],\\n                            backgroundColor: 'rgba(54, 162, 235, 0.9)',\\n                            borderColor: 'rgba(54, 162, 235, 1)',\\n                        },\\n                    ];\\n\\n                    const options3 = createBasicConfig('bar', chartSampleLabel, chartSampleData, {\\n                        scales: {\\n                        yAxes: [\\n                            {\\n                            ticks: {\\n                                beginAtZero: true,\\n                            },\\n                            },\\n                        ],\\n                        },\\n                    })\\n\\n                    // this.salesReportChart = generateChart('chart1', options3)\\n                    // this.todaysPurchaseOrderChart = generateChart('chart2', options2)\\n                    // this.todaysReceivedOrderChart = generateChart('chart3', options2)\\n                    // this.todaysProfitChart = generateChart('chart4', options2)\\n                    // this.salesComparisonChart = generateChart('chart5', options)\\n                    // this.purchaseComparisonChart = generateChart('chart6', options3)\\n                    resolve();\\n                });\\n            });\\n\\n            promise.then(() => {\\n                this.ifReady = true;\\n            });\\n        }\\n     }\\n\\n\\n</script>\\n\\n<style>\\n    .center {\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n    }\\n    .card-min {\\n        min-height: 200px;\\n    }\\n    .card-mod{\\n        padding-top:10px;\\n    }\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///342\n");

/***/ }),

/***/ 343:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar createBasicConfig = function createBasicConfig(type, labels, datasets, options) {\n    return {\n        type: type,\n        data: {\n            labels: labels,\n            datasets: datasets\n        },\n        options: options\n    };\n};\n\nvar generateChart = function generateChart(chartElement, chartOptions) {\n    return chartElement && chartOptions ? new Chart(chartElement, chartOptions) : new Chart();\n};\nvar convertToDate = function convertToDate(strDate) {\n    return new Date(strDate).toDateString();\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    data: function data() {\n        return {\n            selectedBranchWeek: '',\n            selectedTypeWeek: '',\n            ifReady: false,\n            chart: '',\n            salesReportChart: '',\n            todaysPurchaseOrderChart: '',\n            todaysReceivedOrderChart: '',\n            todaysProfitChart: '',\n            salesComparisonChart: '',\n            purchaseComparisonChart: '',\n            dateToday: new Date(),\n            quotations: [],\n            quotationsForApproval: [],\n            todaysQuotations: [],\n            invoices: [],\n            purchaseOrders: [],\n            todaysPurchaseOrders: [],\n            bills: [],\n            todaysReceiveOrders: [],\n            receiveOrder: [],\n            todaysStockRequests: [],\n            stockRequests: [],\n            invoicePayment: '',\n            stockRequest: [],\n            stockTransfers: [],\n            options: [],\n            totalProfit: 0,\n            chartLabels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n            salesTypeTableData: [],\n            salesTypeChartData: [{\n                label: 'Foods',\n                data: [{\n                    val: 1\n                }, {\n                    val: 2\n                }, {\n                    val: 3\n                }, {\n                    val: 4\n                }]\n            }, {\n                label: 'Oats',\n                data: [{\n                    val: 5\n                }, {\n                    val: 10\n                }, {\n                    val: 30\n                }, {\n                    val: 40\n                }]\n            }]\n        };\n    },\n\n\n    methods: {\n        changeBranchWeek: function changeBranchWeek() {\n            //console.log(this.selectedBranchWeek)\n        },\n        changeTypeWeek: function changeTypeWeek() {\n            var _this = this;\n\n            console.log(this.selectedTypeWeek);\n            this.salesTypeChartData.map(function (data, i) {\n                if (data.label === _this.selectedTypeWeek) {\n                    _this.salesTypeTableData = _this.salesTypeChartData[i].data;\n                }\n            });\n        },\n        kFormatter: function kFormatter(num) {\n            return num > 999 ? (num / 1000).toFixed(1) + 'K' : num;\n        }\n    },\n    mounted: function mounted() {\n        var _this2 = this;\n\n        var weeks = [{\n            label: 'Drinks',\n            data: [{\n                val: 1\n            }, {\n                val: 2\n            }, {\n                val: 3\n            }, {\n                val: 4\n            }]\n        }];\n        var createWeekData = function createWeekData(weekArray) {\n            return weekArray.map(function (week, i) {\n                return {\n                    label: week.label,\n                    data: week.data.map(function (data) {\n                        return data.val;\n                    }),\n                    backgroundColor: 'rgba(54, 162, 235, ' + week.shade + ')',\n                    borderColor: 'rgba(54, 162, 235, 1)'\n                };\n            });\n        };\n\n        var createTypeChartData = function createTypeChartData(weekdata) {\n            return weekdata.map(function (arr) {\n                return {\n                    label: arr.label,\n                    data: arr.data,\n                    backgroundColor: 'rgba(54, 162, 235, ' + arr.percent + ')',\n                    borderColor: 'rgba(54, 162, 235, 1)'\n                };\n            });\n        };\n\n        var createOptions = function createOptions(weekArray) {\n            return weekArray.map(function (data) {\n                return data.label;\n            });\n        };\n\n        this.salesTypeTableData = this.salesTypeChartData[0].data;\n        console.log(this.salesTypeTableData);\n        this.options = createOptions(this.salesTypeChartData);\n\n        //console.clear();\n        var getAllQuotations = function getAllQuotations() {\n            axios.get('/api/quotations/get-all-quotations').then(function (res) {\n                var allQuotations = res.data.quotations;\n                console.groupCollapsed('Quotation Request');\n\n                var log = JSON.stringify(allQuotations);\n                //console.log('All Quotation', JSON.parse(log));\n\n                _this2.quotations = allQuotations ? allQuotations.sort(function (a, b) {\n                    return new Date(a.created_at) - new Date(b.created_at);\n                }) : [];\n\n                var issuedQuotations = _this2.quotationsForApproval = allQuotations.filter(function (quo) {\n                    return quo.status === 0;\n                });\n\n                _this2.todaysQuotations = allQuotations.filter(function (quo) {\n                    return quo.status === 0 && new Date(quo.created_at).getDate() === _this2.dateToday.getDate();\n                });\n\n                //console.log('Issued Quotations',issuedQuotations)\n                console.groupEnd();\n            }).catch(function (error) {\n                return console.error(error);\n            });\n        };\n\n        var getAllInvoices = function getAllInvoices() {\n            axios.get('/api/invoices/get-all-invoices').then(function (res) {\n                console.groupCollapsed('Invoice Request');\n                var allInvoices = res.data.invoices.sort(function (a, b) {\n                    return new Date(a.created_at) - new Date(b.created_at);\n                });\n                //console.log('All Invoices ->',allInvoices)\n                console.groupEnd();\n            }).catch(function (error) {\n                return console.error(error);\n            });\n        };\n\n        var getTotalProfit = function getTotalProfit(array) {\n            var tempAmount = 0;\n            if (array.reduce) {\n                var _finalAmount = array.reduce(function (prev, curr) {\n                    var prevAmount = prev.amount ? prev.amount : 0;\n                    var currAmount = curr.amount ? curr.amount : 0;\n                    return parseInt(prevAmount) + parseInt(currAmount);\n                });\n            }\n            return finalAmount ? finalAmount : 0;\n        };\n\n        var getAllInvoicePayments = function getAllInvoicePayments() {\n            axios.get('/api/invoice-payments/get-all-invoice-payments').then(function (res) {\n                console.groupCollapsed('Invoice Payments');\n                var allInvoices = res.data.invoice_payments;\n                _this2.invoices = allInvoices ? allInvoices.sort(function (a, b) {\n                    return new Date(a.created_at) - new Date(b.created_at);\n                }) : [];\n                //console.log('All Invoices ->',JSON.parse(JSON.stringify({res:allInvoices})))\n\n                var testData = JSON.parse(JSON.stringify({ res: allInvoices }));\n\n                _this2.totalProfit = getTotalProfit(_this2.invoices);\n                //console.log('Total Profit ->', this.totalProfit)\n                _this2.total;\n\n                // Separate by Month\n                var monthData = testData.res.filter(function (data) {\n                    return new Date(data.created_at).getMonth() === new Date().getMonth();\n                });\n                //console.log('Month Data ->', monthData)\n\n                //Sort Month by first to last\n                var sortedMonthData = monthData.sort(function (a, b) {\n                    return new Date(a.created_at) - new Date(b.created_at);\n                });\n\n                Date.prototype.getWeekNumber = function () {\n                    var d = new Date(Date.UTC(this.getFullYear(), this.getMonth(), this.getDate()));\n                    var dayNum = d.getUTCDay() || 7;\n                    d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n                    var yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n                    return Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\n                };\n\n                // Separate Month Data to Week Data\n                var weekData = [[], [], [], []];\n                var tempData = [];\n\n                function weekOfMonth(m) {\n                    return m.week() - moment(m).startOf('month').week() + 1;\n                }\n\n                sortedMonthData.map(function (data) {\n                    var weeknumber = weekOfMonth(moment(data.created_at));\n                    weekData[weeknumber - 1].push(data);\n                });\n\n                //console.log('Week Data ->', weekData)\n\n                console.groupEnd();\n            }).catch(function (error) {\n                return console.error(error);\n            });\n        };\n\n        var getAllPurchaseOrders = function getAllPurchaseOrders() {\n            axios.get('/api/purchase-orders/get-all-purchase-orders').then(function (res) {\n                console.groupCollapsed('Purchase Orders');\n                var allPurchaseOrders = res.data.purchase_orders;\n                //console.log('All Purchase Orders ->',JSON.parse(JSON.stringify({res:res.data.purchase_orders})))\n                var issuedReceiveOrders = allPurchaseOrders.filter(function (data) {\n                    return data.status === 0;\n                });\n                //console.log('Issued Purchase Orders ->', allPurchaseOrders)\n                _this2.todaysPurchaseOrders = allPurchaseOrders.sort(function (a, b) {\n                    return new Date(a.created_at) - new Date(b.created_at);\n                });\n                _this2.purchaseOrders = _this2.todaysPurchaseOrders.filter(function (val, i) {\n                    return i < 10;\n                });\n                console.groupEnd();\n            }).catch(function (error) {\n                return console.error(error);\n            });\n        };\n\n        var getAllReceiveOrder = function getAllReceiveOrder() {\n            axios.get('/api/receive-orders/get-all-receive-orders').then(function (res) {\n                console.groupCollapsed('Receive Orders');\n                var allReceiveOrders = res.data.receive_orders;\n                //console.log('All receive Orders ->', allReceiveOrders)\n                _this2.todaysReceiveOrders = allReceiveOrders ? allReceiveOrders.sort(function (a, b) {\n                    return new Date(a.created_at) - new Date(b.created_at);\n                }) : [];\n                _this2.purchaseOrders = _this2.todaysPurchaseOrders.filter(function (val, i) {\n                    return i < 10;\n                });\n                console.groupEnd();\n            }).catch(function (error) {\n                return console.error(error);\n            });\n        };\n\n        var getAllStockTransfer = function getAllStockTransfer() {\n            axios.get('/api/stock-transfers/get-all-stock-transfers').then(function (res) {\n                //console.group('Stock Transfer')\n                var allStockTransfer = res.data.stock_transfers;\n                //console.log('All Stock Transfers ->',JSON.parse(JSON.stringify({res:allStockTransfer})))\n                var stockTransferApproval = allStockTransfer.filter(function (data) {\n                    return data.status === 0;\n                });\n                _this2.stockTransfers = stockTransferApproval ? stockTransferApproval.sort(function (a, b) {\n                    return new Date(a.created_at) - new Date(b.created_at);\n                }) : [];\n                console.groupEnd();\n            }).catch(function (error) {\n                return console.error(error);\n            });\n        };\n\n        var getAllStockRequest = function getAllStockRequest() {\n            axios.get('/api/stock-requests/get-all-unapproved-stock-requests').then(function (res) {\n                console.groupCollapsed('Stock Requests');\n                var allStockRequests = res.data.stock_requests;\n                var log = JSON.stringify({ stock_request: allStockRequests });\n                //console.log('All Stock Requests ->',JSON.parse(log))\n                _this2.stockRequests = allStockRequests ? allStockRequests.sort(function (a, b) {\n                    return new Date(a.created_at) - new Date(b.created_at);\n                }) : [];\n                console.groupEnd();\n            }).catch(function (error) {\n                return console.error(error);\n            });\n        };\n\n        var getAllBills = function getAllBills() {\n            axios.get('/api/bill-payments/get-all-bill-payments').then(function (res) {\n                console.groupCollapsed('Bills Payment');\n                var allBills = { bills: res.data.bills_payments };\n                var log = JSON.stringify(allBills);\n                //console.log('All Bills ->',JSON.parse(log))\n                // this.bills = allBills.sort((a,b)=>new Date(a.created_at)-new Date(b.created_at));\n                console.groupEnd();\n            }).catch(function (error) {\n                return console.error(error);\n            });\n        };\n\n        getAllQuotations();\n        getAllInvoices();\n        getAllPurchaseOrders();\n        getAllBills();\n        getAllReceiveOrder();\n        getAllInvoicePayments();\n        getAllStockRequest();\n        getAllStockTransfer();\n\n        //console.log('Data Today ->', this.dateToday)\n\n        if (this.$store.state.corporation_id == null || undefined) {\n            this.$router.push({ name: 'corporations.select' });\n        }\n\n        var salesBranchOptions = createBasicConfig('bar', this.chartLabels, createWeekData(weeks), {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        });\n        var salesTypeOptions = createBasicConfig('bar', this.chartLabels, createWeekData(this.salesTypeChartData), {\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }]\n            }\n        });\n        generateChart('sales-report-branch', salesBranchOptions);\n        generateChart('sales-report-type', salesTypeOptions);\n\n        var promise = new Promise(function (resolve, reject) {\n            axios.get('/api/statistics/test-payload').then(function (res) {\n                var response = res.data.payload;\n                var labels = response.map(function (data) {\n                    return convertToDate(data.date);\n                });\n                var data = response.map(function (data) {\n                    return data.data;\n                });\n                var options = createBasicConfig('bar', labels, [{\n                    label: 'Sales',\n                    data: data,\n                    backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                    borderColor: 'rgba(54, 162, 235, 1)',\n                    borderWidth: 2,\n                    pointRadius: 0,\n                    lineTension: 0\n                }], {\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: true\n                            }\n                        }]\n                    }\n                });\n\n                var options2 = createBasicConfig('line', labels, [{\n                    data: data,\n                    backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                    borderColor: 'rgba(54, 162, 235, 1)',\n                    borderWidth: 2,\n                    pointRadius: 0,\n                    lineTension: 0,\n                    fill: false\n                }], {\n                    legend: {\n                        display: false\n                    },\n                    scales: {\n                        yAxes: [{\n                            display: false,\n                            gridLines: {\n                                display: false\n                            },\n                            ticks: {\n                                beginAtZero: true\n                            }\n                        }],\n                        xAxes: [{\n                            display: false\n                        }]\n                    }\n                });\n\n                var chartSampleLabel = ['Week 1', 'Week 2', 'Week 3', 'Week 4'];\n                var chartSampleData = [{\n                    label: 'Type 1',\n                    data: [3, 7, 4, 6],\n                    backgroundColor: 'rgba(54, 162, 235, 0.3)',\n                    borderColor: 'rgba(54, 162, 235, 1)'\n                }, {\n                    label: 'Type 2',\n                    data: [4, 3, 5, 7],\n                    backgroundColor: 'rgba(54, 162, 235, 0.5)',\n                    borderColor: 'rgba(54, 162, 235, 1)'\n                }, {\n                    label: 'Type 3',\n                    data: [7, 2, 6, 9],\n                    backgroundColor: 'rgba(54, 162, 235, 0.9)',\n                    borderColor: 'rgba(54, 162, 235, 1)'\n                }];\n\n                var options3 = createBasicConfig('bar', chartSampleLabel, chartSampleData, {\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: true\n                            }\n                        }]\n                    }\n                });\n\n                // this.salesReportChart = generateChart('chart1', options3)\n                // this.todaysPurchaseOrderChart = generateChart('chart2', options2)\n                // this.todaysReceivedOrderChart = generateChart('chart3', options2)\n                // this.todaysProfitChart = generateChart('chart4', options2)\n                // this.salesComparisonChart = generateChart('chart5', options)\n                // this.purchaseComparisonChart = generateChart('chart6', options3)\n                resolve();\n            });\n        });\n\n        promise.then(function () {\n            _this2.ifReady = true;\n        });\n    }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///343\n");

/***/ }),

/***/ 344:
/***/ (function(module, exports, __webpack_require__) {

eval("var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"mx-md-4 px-0\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"row\" }, [\n      _c(\"div\", { staticClass: \"col-md-8 col-sm-6 pr-0\" }, [\n        _c(\"div\", { staticClass: \"grid\" }, [\n          _c(\"div\", { staticClass: \"row mt-3\" }, [\n            _c(\"div\", { staticClass: \"col-6 pr-0\" }, [\n              _c(\"div\", { staticClass: \"card\" }, [\n                _vm._m(1),\n                _vm._v(\" \"),\n                this.quotationsForApproval &&\n                this.quotationsForApproval.length > 0\n                  ? _c(\n                      \"span\",\n                      _vm._l(this.quotationsForApproval, function(quote) {\n                        return _c(\n                          \"ul\",\n                          {\n                            key: quote.id,\n                            staticClass: \"list-group list-group-flush\"\n                          },\n                          [\n                            _c(\n                              \"li\",\n                              { staticClass: \"list-group-item\" },\n                              [\n                                _c(\n                                  \"router-link\",\n                                  {\n                                    attrs: {\n                                      to: {\n                                        name: \"quotations.view\",\n                                        params: { id: quote.id }\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(_vm._s(quote.number))]\n                                )\n                              ],\n                              1\n                            )\n                          ]\n                        )\n                      })\n                    )\n                  : _c(\"span\", [_vm._m(2)])\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-6\" }, [\n              _c(\"div\", { staticClass: \"card\" }, [\n                _vm._m(3),\n                _vm._v(\" \"),\n                this.stockRequests && this.stockRequests.length > 0\n                  ? _c(\n                      \"span\",\n                      _vm._l(this.stockRequests, function(stock) {\n                        return _c(\n                          \"ul\",\n                          {\n                            key: stock.id,\n                            staticClass: \"list-group list-group-flush\"\n                          },\n                          [\n                            _c(\n                              \"li\",\n                              { staticClass: \"list-group-item\" },\n                              [\n                                _c(\n                                  \"router-link\",\n                                  {\n                                    attrs: {\n                                      to: {\n                                        name: \"stock-requests.view\",\n                                        params: { id: stock.id }\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(_vm._s(stock.number))]\n                                )\n                              ],\n                              1\n                            )\n                          ]\n                        )\n                      })\n                    )\n                  : _c(\"span\", [_vm._m(4)])\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-6 mt-2 pr-0\" }, [\n              _c(\"div\", { staticClass: \"card\" }, [\n                _vm._m(5),\n                _vm._v(\" \"),\n                this.stockTransfers && this.stockTransfers.length > 0\n                  ? _c(\n                      \"span\",\n                      _vm._l(this.stockTransfers, function(stock) {\n                        return _c(\n                          \"ul\",\n                          {\n                            key: stock.id,\n                            staticClass: \"list-group list-group-flush\"\n                          },\n                          [\n                            _c(\n                              \"li\",\n                              { staticClass: \"list-group-item\" },\n                              [\n                                _c(\n                                  \"router-link\",\n                                  {\n                                    attrs: {\n                                      to: {\n                                        name: \"stock-transfers.view\",\n                                        params: { id: stock.id }\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(_vm._s(stock.number))]\n                                )\n                              ],\n                              1\n                            )\n                          ]\n                        )\n                      })\n                    )\n                  : _c(\"span\", [_vm._m(6)])\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-6 mt-2\" }, [\n              _c(\"div\", { staticClass: \"card\" }, [\n                _vm._m(7),\n                _vm._v(\" \"),\n                this.purchaseOrders && this.purchaseOrders.length > 0\n                  ? _c(\n                      \"span\",\n                      _vm._l(this.purchaseOrders, function(po) {\n                        return _c(\n                          \"ul\",\n                          {\n                            key: po.id,\n                            staticClass: \"list-group list-group-flush\"\n                          },\n                          [\n                            _c(\n                              \"li\",\n                              { staticClass: \"list-group-item\" },\n                              [\n                                _c(\n                                  \"router-link\",\n                                  {\n                                    attrs: {\n                                      to: {\n                                        name: \"purchase-orders.view\",\n                                        params: { id: po.id }\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(_vm._s(po.reference_number))]\n                                )\n                              ],\n                              1\n                            )\n                          ]\n                        )\n                      })\n                    )\n                  : _c(\"span\", [_vm._m(8)])\n              ])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"row mt-3\" }, [\n            _c(\"div\", { staticClass: \"col-12\" }, [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-md-4 col-sm-12\" }, [\n                  _c(\"div\", { staticClass: \"card card-min\" }, [\n                    _c(\"div\", { staticClass: \"card-body row\" }, [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"col-md-12 col-sm-12 text-center  center\"\n                        },\n                        [\n                          _c(\"span\", { staticClass: \"display-4\" }, [\n                            _vm._v(_vm._s(_vm.todaysPurchaseOrders.length))\n                          ])\n                        ]\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _vm._m(9)\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-md-4 col-sm-12\" }, [\n                  _c(\"div\", { staticClass: \"card card-min\" }, [\n                    _c(\"div\", { staticClass: \"card-body row\" }, [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"col-md-12 col-sm-12 text-center  center\"\n                        },\n                        [\n                          _c(\"span\", { staticClass: \"display-4\" }, [\n                            _vm._v(_vm._s(_vm.todaysReceiveOrders.length))\n                          ])\n                        ]\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _vm._m(10)\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-md-4 col-sm-12\" }, [\n                  _c(\"div\", { staticClass: \"card card-min\" }, [\n                    _c(\"div\", { staticClass: \"card-body row\" }, [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"col-md-12 col-sm-12 text-center  center\"\n                        },\n                        [\n                          _c(\"span\", { staticClass: \"display-4\" }, [\n                            _vm._v(_vm._s(this.kFormatter(_vm.totalProfit)))\n                          ])\n                        ]\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _vm._m(11)\n                  ])\n                ])\n              ])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"row mt-3\" })\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"col-md-4 col-sm-6\" }, [\n        _c(\"div\", { staticClass: \"row mt-3\" }, [\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\"div\", { staticClass: \"card\" }, [\n              _vm._m(12),\n              _vm._v(\" \"),\n              this.purchaseOrders && this.purchaseOrders.length > 0\n                ? _c(\n                    \"span\",\n                    _vm._l(this.purchaseOrders, function(po) {\n                      return _c(\n                        \"ul\",\n                        {\n                          key: po.id,\n                          staticClass: \"list-group list-group-flush\"\n                        },\n                        [\n                          _c(\n                            \"li\",\n                            { staticClass: \"list-group-item\" },\n                            [\n                              _c(\n                                \"router-link\",\n                                {\n                                  attrs: {\n                                    to: {\n                                      name: \"purchase-orders.view\",\n                                      params: { id: po.id }\n                                    }\n                                  }\n                                },\n                                [_vm._v(_vm._s(po.reference_number))]\n                              )\n                            ],\n                            1\n                          )\n                        ]\n                      )\n                    })\n                  )\n                : _c(\"span\", [_vm._m(13)])\n            ])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row mt-2\" }, [\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\"div\", { staticClass: \"card\" }, [\n              _vm._m(14),\n              _vm._v(\" \"),\n              this.quotations && this.quotations.length > 0\n                ? _c(\n                    \"span\",\n                    _vm._l(this.quotations, function(quote) {\n                      return _c(\n                        \"ul\",\n                        {\n                          key: quote.id,\n                          staticClass: \"list-group list-group-flush\"\n                        },\n                        [\n                          _c(\n                            \"li\",\n                            { staticClass: \"list-group-item\" },\n                            [\n                              _c(\n                                \"router-link\",\n                                {\n                                  attrs: {\n                                    to: {\n                                      name: \"quotations.view\",\n                                      params: { id: quote.id }\n                                    }\n                                  }\n                                },\n                                [_vm._v(_vm._s(quote.number))]\n                              )\n                            ],\n                            1\n                          )\n                        ]\n                      )\n                    })\n                  )\n                : _c(\"span\", [_vm._m(15)])\n            ])\n          ])\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"row\" }, [\n      _c(\"div\", { staticClass: \"col-12 my-3\" }, [\n        _c(\"span\", { staticClass: \"h3\" }, [_vm._v(\"Dashboard\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-header\" }, [\n      _c(\"span\", { staticClass: \"subcontent-header\" }, [\n        _c(\"strong\", [_vm._v(\"Quotations for Approval\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { staticClass: \"list-group list-group-flush\" }, [\n      _c(\"li\", { staticClass: \"list-group-item\" }, [\n        _vm._v(\"No Pending Quotation\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-header\" }, [\n      _c(\"span\", { staticClass: \"subcontent-header\" }, [\n        _c(\"strong\", [_vm._v(\"Stock Requests for Approval\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { staticClass: \"list-group list-group-flush\" }, [\n      _c(\"li\", { staticClass: \"list-group-item\" }, [\n        _vm._v(\"No Pending Stock Request\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-header\" }, [\n      _c(\"span\", { staticClass: \"subcontent-header\" }, [\n        _c(\"strong\", [_vm._v(\"Stock Transfers for Approval\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { staticClass: \"list-group list-group-flush\" }, [\n      _c(\"li\", { staticClass: \"list-group-item\" }, [\n        _vm._v(\"No Pendting Stock Transfer\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-header\" }, [\n      _c(\"span\", { staticClass: \"subcontent-header\" }, [\n        _c(\"strong\", [_vm._v(\"Purchase Orders for Approval\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { staticClass: \"list-group list-group-flush\" }, [\n      _c(\"li\", { staticClass: \"list-group-item\" }, [_vm._v(\"No Pending Order\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-footer text-center\" }, [\n      _c(\"strong\", [\n        _vm._v(\n          \"\\n                                                Today's Issued Purchase Order\\n                                            \"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-footer text-center\" }, [\n      _c(\"strong\", [\n        _vm._v(\n          \"\\n                                            Today's Issued Received Order\\n                                            \"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-footer text-center\" }, [\n      _c(\"strong\", [\n        _vm._v(\n          \"\\n                                            Today's Profit\\n                                            \"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-header\" }, [\n      _c(\"span\", { staticClass: \"subcontent-header\" }, [\n        _c(\"strong\", [_vm._v(\" Latest Purchase Orders \")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { staticClass: \"list-group list-group-flush\" }, [\n      _c(\"li\", { staticClass: \"list-group-item\" }, [\n        _vm._v(\"No Purchase Order Available\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"card-header\" }, [\n      _c(\"span\", { staticClass: \"subcontent-header\" }, [\n        _c(\"strong\", [_vm._v(\"Latest Quotations\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { staticClass: \"list-group list-group-flush\" }, [\n      _c(\"li\", { staticClass: \"list-group-item\" }, [\n        _vm._v(\"No Quotations Available\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\nmodule.exports = { render: render, staticRenderFns: staticRenderFns }\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-1d78e5d0\", module.exports)\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///344\n");

/***/ })

});